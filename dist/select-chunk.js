/*! For license information please see select-chunk.js.LICENSE.txt */
(this.webpackChunkCoCreate_floatingLabel=this.webpackChunkCoCreate_floatingLabel||[]).push([["select-chunk"],{"../CoCreate-form/src/index.js":(__unused_webpack_module,exports)=>{"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.default = void 0;\n// import observer from '../../CoCreate-observer/src'\n// import ccutils from '../../../CoCreateJS/src/utils';\n// import {socket, crud, core} from '../../../CoCreateJS/src';\n// import action from '../../CoCreate-action/src'\n// import crdt from '../../CoCreate-crdt/src'\n// import text from '../../CoCreate-text/src'\n// import utils from \"./utils\"\nconst CoCreateForm = {\n  requestAttr: \"data-document_request\",\n  selectors: [],\n  modules: [],\n  init: function ({\n    name,\n    selector,\n    callback\n  }) {\n    this.modules.push({\n      name,\n      selector,\n      callback\n    });\n\n    if (selector) {\n      this.selectors.push(selector);\n    }\n  },\n  get: function () {\n    return {\n      selectors: this.selectors\n    };\n  },\n  checkID: function (element, attr = \"data-document_id\") {\n    let document_id = element.getAttribute(attr) || \"\";\n\n    if (document_id === \"\" || document_id === \"pending\" || !ccutils.checkValue(document_id)) {\n      return false;\n    }\n\n    return true;\n  },\n  request: function ({\n    form,\n    element,\n    nameAttr,\n    value\n  }) {\n    if (!form && element) {\n      form = element.closest('form');\n    }\n\n    if (form) {\n      this.__requestDocumentIdOfForm(form);\n    } else if (element) {\n      nameAttr = nameAttr || \"name\";\n\n      this.__requestDocumentId(element, nameAttr, value);\n    }\n  },\n  initElement: function (container) {\n    const __container = container || document;\n\n    if (!__container.querySelectorAll) {\n      return;\n    }\n\n    let forms = __container.querySelectorAll('form');\n\n    if (forms.length === 0 && __container != document && __container.tagName === \"FORM\") {\n      forms = [__container];\n    }\n\n    forms.forEach(form => {\n      utils.setAttribute(form);\n      utils.disableAutoFill(form);\n    });\n  },\n  __init: function () {\n    const forms = document.querySelectorAll('form');\n\n    this.__initEvent();\n\n    forms.forEach(form => {\n      utils.setAttribute(form);\n    });\n  },\n  __initEvent: function () {\n    const self = this;\n    socket.listen('createDocument', function (data) {\n      const {\n        metadata\n      } = data;\n\n      self.__receivedDocumentId(data);\n\n      if (metadata == \"createDocument-action\") {//. dispatch EndAction\n      }\n    });\n    socket.listen('deleteDocument', function (data) {\n      const {\n        metadata\n      } = data;\n\n      if (metadata === \"deleteDocument-action\") {//.dispatch End Action\n      }\n    });\n    document.addEventListener('clicked-submitBtn', function (event) {\n      const {\n        element\n      } = event.detail;\n      self.modules.forEach(({\n        selector,\n        callback\n      }) => {\n        if (callback && element.matches(selector)) {\n          callback.call(null, element);\n        }\n      });\n    });\n  },\n  __deleteDocumentAction: function (btn) {\n    const collection = btn.getAttribute('data-collection');\n    const document_id = btn.getAttribute('data-document_id');\n\n    if (ccutils.checkValue(collection) && ccutils.checkValue(document_id)) {\n      crud.deleteDocument({\n        'collection': collection,\n        'document_id': document_id,\n        'metadata': 'deleteDocument-action'\n      });\n      document.dispatchEvent(new CustomEvent('deletedDocument', {\n        detail: {}\n      }));\n    }\n  },\n  __deleteDocumentsAction: function (btn) {\n    const collection = btn.getAttribute('data-collection');\n    const selector = btn.getAttribute('data-document_target');\n    if (!selector) return;\n    const selectedEls = document.querySelectorAll(selector);\n\n    if (utils.checkValue(collection)) {\n      selectedEls.forEach(el => {\n        const document_id = el.getAttribute('data-document_id');\n\n        if (ccutils.checkValue(document_id)) {\n          crud.deleteDocument({\n            'collection': collection,\n            'document_id': document_id,\n            'metadata': ''\n          });\n        }\n      });\n      document.dispatchEvent(new CustomEvent('deletedDocuments', {\n        detail: {}\n      }));\n    }\n  },\n  __createDocumentAction: function (btn) {\n    const form = btn.closest(\"form\");\n    const self = this;\n    let collections = utils.getCOllections(form);\n    collections.forEach(collection => {\n      let data = utils.getFormData(form, \"\", collection);\n\n      if (Object.keys(data).length == 0 && data.constructor === Object) {\n        return;\n      }\n\n      if (ccutils.checkValue(collection)) {\n        crud.createDocument({\n          'collection': collection,\n          'data': data,\n          'metadata': 'createDocument-action',\n          'element': 'empty'\n        });\n        document.dispatchEvent(new CustomEvent('createdDocument', {\n          detail: {}\n        }));\n      }\n    });\n  },\n  __saveDocumentAction: function (btn) {\n    const form = btn.closest(\"form\");\n\n    if (!utils.checkFormValidate(form)) {\n      alert('Values are not unique');\n      return;\n    }\n\n    const selectors = this.selectors || [];\n    const elements = form.querySelectorAll(selectors.join(','));\n    let request_document_id = false;\n\n    for (var i = 0; i < elements.length; i++) {\n      let el = elements[i];\n      const data_document_id = el.getAttribute('data-document_id');\n\n      if (el.getAttribute('data-save_value') == 'false') {\n        continue;\n      }\n\n      if (!data_document_id) {\n        if (el.getAttribute('name')) {\n          request_document_id = true;\n        }\n\n        continue;\n      }\n\n      if (input.isUsageY(el)) {\n        continue;\n      }\n\n      if (utils.isTemplateInput(el)) return;\n      var new_event = new CustomEvent(\"clicked-submitBtn\", {\n        bubbles: true,\n        detail: {\n          type: \"submitBtn\",\n          element: el\n        }\n      });\n      el.dispatchEvent(new_event);\n    }\n\n    if (request_document_id) {\n      this.requestDocumentIdOfForm(form);\n    }\n\n    document.dispatchEvent(new CustomEvent('savedDocument', {\n      detail: {}\n    }));\n  },\n  __requestDocumentId: function (element, nameAttr = \"name\", value = null) {\n    const collection = element.getAttribute('data-collection');\n    const name = element.getAttribute(nameAttr);\n    if (!collection || !name) return;\n    const request_id = ccutils.generateUUID();\n    element.setAttribute(this.requestAttr, request_id);\n    crud.createDocument({\n      \"collection\": collection,\n      \"element\": request_id,\n      \"metadata\": \"\"\n    });\n  },\n  __requestDocumentIdOfForm: function (form) {\n    let self = this;\n    let elemens = form.querySelectorAll('[name], [data-pass_to]');\n    let collections = [];\n\n    for (var i = 0; i < elemens.length; i++) {\n      let el = elemens[i];\n\n      if (el.parentNode.classList.contains('template')) {\n        continue;\n      }\n\n      const collection = el.getAttribute(\"data-collection\") || el.getAttribute(\"data-pass_collection\") || \"\";\n\n      if (collection !== \"\" && !collections.includes(collection) && !self.checkID(el, 'data-document_id') && !self.checkID(el, 'data-pass_document_id')) {\n        const request_id = ccutils.generateUUID();\n        collections.push(collection);\n        el.setAttribute(this.requestAttr, request_id); //. get Data\n\n        let data = utils.getFormData(form, \"\", collection);\n        /* FixME Create Document request */\n\n        crud.createDocument({\n          \"collection\": collection,\n          \"element\": request_id,\n          'data': data,\n          \"metadata\": \"\"\n        });\n      }\n    }\n  },\n  __setNewIdProcess: function (element, document_id, pass) {\n    if (!element) return;\n    element.removeAttribute(this.requestAttr);\n    const event_data = {\n      document_id: document_id\n    };\n\n    if (!pass && !this.checkID(element) && element.hasAttribute('name')) {\n      element.setAttribute('data-document_id', document_id);\n    }\n\n    if (pass && !this.checkID(element, 'data-pass_document_id') && element.hasAttribute('data-pass_to')) {\n      element.setAttribute('data-pass_document_id', document_id); // CoCreateLogic.storePassData(element)\n\n      if (element.parentNode.classList.contains('submitBtn')) {\n        element.click();\n      }\n    }\n\n    var event = new CustomEvent('set-document_id', {\n      detail: event_data\n    });\n    element.dispatchEvent(event);\n  },\n  __receivedDocumentId: function (data) {\n    if (!data['document_id']) {\n      return;\n    }\n\n    let element = document.querySelector(`[${this.requestAttr}=\"${data['element']}\"]`);\n    if (!element) return;\n    let self = this;\n    const form = element.tagName === \"FORM\" ? element : utils.getParents(element, 'form');\n    const collection = data['collection'];\n    const id = data['document_id'];\n\n    if (form && id) {\n      form.setAttribute('data-form_id', data['element']);\n      const elements = form.querySelectorAll(`[data-collection=${collection}], [data-pass_collection=${collection}]`);\n      elements.forEach(function (el) {\n        el.removeAttribute(self.requestAttr);\n        if (el.hasAttribute('name')) self.__setNewIdProcess(el, id);\n        if (el.hasAttribute('data-pass_to')) self.__setNewIdProcess(el, id, true);\n      });\n    } else if (element) {\n      this.__setNewIdProcess(element, id);\n    }\n  }\n}; // CoCreateForm.__init();\n// core.registerInit(CoCreateForm.initElement, CoCreateForm);\n// observer.init({ \n// \tname: 'CoCreateForm', \n// \tobserve: ['subtree', 'childList'],\n// \tinclude: 'form', \n// \tcallback: function(mutation) {\n// \t\tCoCreateForm.initElement(mutation.target)\n// \t}\n// })\n// action.init({\n// \taction: \"createDocument\",\n// \tendEvent: \"createdDocument\",\n// \tcallback: (btn, data) => {\n// \t\tCoCreateForm.__createDocumentAction(btn)\n// \t},\n// })\n// action.init({\n// \taction: \"deleteDocument\",\n// \tendEvent: \"deletedDocument\",\n// \tcallback: (btn, data) => {\n// \t\tCoCreateForm.__deleteDocumentAction(btn)\n// \t},\n// })\n// action.init({\n// \taction: \"deleteDocuments\",\n// \tendEvent: \"deletedDocuments\",\n// \tcallback: (btn, data) => {\n// \t\tCoCreateDocument.__deleteDocumentsAction(btn)\n// \t},\n// })\n// action.init({\n// \taction: \"saveDocument\",\n// \tendEvent: \"savedDocument\",\n// \tcallback: (btn, data) => {\n// \t\tCoCreateForm.__saveDocumentAction(btn)\n// \t},\n// })\n\nvar _default = CoCreateForm;\nexports.default = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../CoCreate-form/src/index.js\n")},"../CoCreate-select/src/adapter.js":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.default = void 0;\n\nvar _select = _interopRequireDefault(__webpack_require__(/*! ./select.js */ \"../CoCreate-select/src/select.js\"));\n\nvar _src = __webpack_require__(/*! ../../../CoCreateJS/src */ \"../../CoCreateJS/src/index.js\");\n\nvar _src2 = _interopRequireDefault(__webpack_require__(/*! ../../CoCreate-form/src */ \"../CoCreate-form/src/index.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst SelectAdapter = {\n  init: function () {\n    this.initElement();\n\n    this.__initEvents();\n  },\n  initElement: function (container) {\n    const mainContainer = container || document;\n\n    if (!mainContainer.querySelectorAll) {\n      return;\n    }\n\n    let containerList = mainContainer.querySelectorAll('cocreate-select, div.select--field');\n\n    for (let i = 0; i < containerList.length; i++) {\n      _select.default.__initSelect(containerList[i]);\n\n      this.__initElementEvent(containerList[i]);\n    }\n  },\n  __initEvents: function () {\n    const self = this;\n    document.addEventListener('dndsuccess', function (e) {\n      const {\n        dropedEl,\n        dragedEl\n      } = e.detail;\n\n      if (typeof dropedEl.tagName != 'undefined' && dropedEl.tagName.toLowerCase() == 'cocreate-select' || dropedEl.classList.contains('select--field')) {\n        self.save(dropedEl);\n        dropedEl.dispatchEvent(new CustomEvent('selectedValue'));\n      }\n    });\n    document.addEventListener('CoCreateSelect-save', function (e) {\n      const {\n        detail: {\n          element\n        }\n      } = e;\n\n      if (!element) {\n        return;\n      }\n\n      self.save(element);\n    });\n\n    _src.socket.listen('readDocument', function (data) {\n      if (data.metadata == 'cocreate-select') {\n        _select.default.setValue(data);\n      }\n    });\n\n    _src.socket.listen('updateDocument', function (data) {\n      if (data.metadata == 'cocreate-select') {\n        _select.default.setValue(data);\n      }\n    });\n\n    document.addEventListener('CoCreate-selected', function (e) {\n      const {\n        detail: {\n          element,\n          value\n        }\n      } = e;\n      console.log(e.detail);\n    });\n  },\n  __initElementEvent: function (selectContainer) {\n    const self = this;\n    selectContainer.addEventListener('set-document_id', function () {\n      self.save(this);\n    }); //. fetch logic\n\n    let collection = selectContainer.getAttribute('data-collection') || 'module_activity';\n    let id = selectContainer.getAttribute('data-document_id');\n\n    if (collection && id) {\n      _src.crud.readDocument({\n        'collection': collection,\n        'document_id': id,\n        'metadata': 'cocreate-select'\n      });\n    }\n  },\n  __sendRequest: function (selectContainer) {\n    let collection = selectContainer.getAttribute('data-collection') || 'module_activity';\n    let id = selectContainer.getAttribute('data-document_id');\n\n    if (collection && id) {\n      _src.crud.readDocument({\n        'collection': collection,\n        'document_id': id,\n        'metadata': 'cocreate-select'\n      });\n    }\n  },\n  save: function (element, isStore = true) {\n    let value = _select.default.getValue(element);\n\n    let collection = element.getAttribute('data-collection') || 'module_activity';\n    let id = element.getAttribute('data-document_id');\n    let name = element.getAttribute('name');\n    let realtime = element.getAttribute('data-realtime') || \"true\";\n    if (!name) return;\n    if (realtime != \"true\" && !isStore) return;\n\n    if (element.getAttribute('data-save_value') == 'false') {\n      return;\n    }\n\n    if (!_src2.default.checkID(element)) {\n      _src2.default.request({\n        element,\n        value,\n        nameAttr: \"name\"\n      });\n\n      element.setAttribute('data-document_id', 'pending');\n    } else if (id) {\n      _src.crud.updateDocument({\n        'collection': collection,\n        'document_id': id,\n        'data': {\n          [name]: value\n        },\n        'upsert': true,\n        'metadata': 'cocreate-select'\n      });\n    }\n  }\n};\nvar _default = SelectAdapter;\nexports.default = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../CoCreate-select/src/adapter.js\n")},"../CoCreate-select/src/index.js":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.default = void 0;\n\nvar _select = _interopRequireDefault(__webpack_require__(/*! ./select.js */ \"../CoCreate-select/src/select.js\"));\n\nvar _adapter = _interopRequireDefault(__webpack_require__(/*! ./adapter.js */ \"../CoCreate-select/src/adapter.js\"));\n\nvar _src = _interopRequireDefault(__webpack_require__(/*! ../../CoCreate-observer/src */ \"../CoCreate-observer/src/index.js\"));\n\nvar _src2 = _interopRequireDefault(__webpack_require__(/*! ../../CoCreate-form/src */ \"../CoCreate-form/src/index.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n_adapter.default.init();\n\n_select.default.adapter = _adapter.default;\n\n_src.default.init({\n  name: 'CoCreateSelectAttributes',\n  observe: ['attributes'],\n  attributes: ['data-document_id'],\n  include: 'cocreate-select',\n  callback: function (mutation) {\n    _adapter.default.__sendRequest(mutation.target);\n  }\n});\n\n_src.default.init({\n  name: 'CoCreateSelect',\n  observe: ['subtree', 'childList'],\n  include: 'cocreate-select',\n  callback: function (mutation) {\n    _adapter.default.initElement(mutation.target);\n  }\n});\n\n_src2.default.init({\n  name: 'CoCreateSelect',\n  selector: \"cocreate-select\",\n  callback: function (el) {\n    _adapter.default.save(el);\n  }\n});\n\nvar _default = _select.default;\nexports.default = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Db0NyZWF0ZS5mbG9hdGluZ0xhYmVsLy4uL0NvQ3JlYXRlLXNlbGVjdC9zcmMvaW5kZXguanM/ZTBlMSJdLCJuYW1lcyI6WyJTZWxlY3RBZGFwdGVyIiwiaW5pdCIsIkNvQ3JlYXRlU2VsZWN0IiwiYWRhcHRlciIsIkNvQ3JlYXRlT2JzZXJ2ZXIiLCJuYW1lIiwib2JzZXJ2ZSIsImF0dHJpYnV0ZXMiLCJpbmNsdWRlIiwiY2FsbGJhY2siLCJtdXRhdGlvbiIsIl9fc2VuZFJlcXVlc3QiLCJ0YXJnZXQiLCJpbml0RWxlbWVudCIsImZvcm0iLCJzZWxlY3RvciIsImVsIiwic2F2ZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOztBQUNBOztBQUNBOzs7O0FBRUFBLGlCQUFjQyxJQUFkOztBQUNBQyxnQkFBZUMsT0FBZixHQUF5QkgsZ0JBQXpCOztBQUVBSSxhQUFpQkgsSUFBakIsQ0FBc0I7QUFDckJJLE1BQUksRUFBRSwwQkFEZTtBQUVyQkMsU0FBTyxFQUFFLENBQUMsWUFBRCxDQUZZO0FBR3JCQyxZQUFVLEVBQUUsQ0FBQyxrQkFBRCxDQUhTO0FBSXJCQyxTQUFPLEVBQUUsaUJBSlk7QUFLckJDLFVBQVEsRUFBRSxVQUFTQyxRQUFULEVBQW1CO0FBQzVCVixxQkFBY1csYUFBZCxDQUE0QkQsUUFBUSxDQUFDRSxNQUFyQztBQUNBO0FBUG9CLENBQXRCOztBQVVBUixhQUFpQkgsSUFBakIsQ0FBc0I7QUFDckJJLE1BQUksRUFBRSxnQkFEZTtBQUVyQkMsU0FBTyxFQUFFLENBQUMsU0FBRCxFQUFZLFdBQVosQ0FGWTtBQUdyQkUsU0FBTyxFQUFFLGlCQUhZO0FBSXJCQyxVQUFRLEVBQUUsVUFBU0MsUUFBVCxFQUFtQjtBQUM1QlYscUJBQWNhLFdBQWQsQ0FBMEJILFFBQVEsQ0FBQ0UsTUFBbkM7QUFDQTtBQU5vQixDQUF0Qjs7QUFTQUUsY0FBS2IsSUFBTCxDQUFVO0FBQ1RJLE1BQUksRUFBRSxnQkFERztBQUVUVSxVQUFRLEVBQUUsaUJBRkQ7QUFHVE4sVUFBUSxFQUFFLFVBQVNPLEVBQVQsRUFBYTtBQUN0QmhCLHFCQUFjaUIsSUFBZCxDQUFtQkQsRUFBbkI7QUFDQTtBQUxRLENBQVY7O2VBT2VkLGUiLCJmaWxlIjoiLi4vQ29DcmVhdGUtc2VsZWN0L3NyYy9pbmRleC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBDb0NyZWF0ZVNlbGVjdCBmcm9tIFwiLi9zZWxlY3QuanNcIlxuaW1wb3J0IFNlbGVjdEFkYXB0ZXIgZnJvbSBcIi4vYWRhcHRlci5qc1wiXG5pbXBvcnQgQ29DcmVhdGVPYnNlcnZlciBmcm9tICcuLi8uLi9Db0NyZWF0ZS1vYnNlcnZlci9zcmMnO1xuaW1wb3J0IGZvcm0gZnJvbSAnLi4vLi4vQ29DcmVhdGUtZm9ybS9zcmMnXG5cblNlbGVjdEFkYXB0ZXIuaW5pdCgpO1xuQ29DcmVhdGVTZWxlY3QuYWRhcHRlciA9IFNlbGVjdEFkYXB0ZXI7XG5cbkNvQ3JlYXRlT2JzZXJ2ZXIuaW5pdCh7IFxuXHRuYW1lOiAnQ29DcmVhdGVTZWxlY3RBdHRyaWJ1dGVzJywgXG5cdG9ic2VydmU6IFsnYXR0cmlidXRlcyddLFxuXHRhdHRyaWJ1dGVzOiBbJ2RhdGEtZG9jdW1lbnRfaWQnXSxcblx0aW5jbHVkZTogJ2NvY3JlYXRlLXNlbGVjdCcsIFxuXHRjYWxsYmFjazogZnVuY3Rpb24obXV0YXRpb24pIHtcblx0XHRTZWxlY3RBZGFwdGVyLl9fc2VuZFJlcXVlc3QobXV0YXRpb24udGFyZ2V0KVxuXHR9XG59KTtcblxuQ29DcmVhdGVPYnNlcnZlci5pbml0KHsgXG5cdG5hbWU6ICdDb0NyZWF0ZVNlbGVjdCcsIFxuXHRvYnNlcnZlOiBbJ3N1YnRyZWUnLCAnY2hpbGRMaXN0J10sXG5cdGluY2x1ZGU6ICdjb2NyZWF0ZS1zZWxlY3QnLCBcblx0Y2FsbGJhY2s6IGZ1bmN0aW9uKG11dGF0aW9uKSB7XG5cdFx0U2VsZWN0QWRhcHRlci5pbml0RWxlbWVudChtdXRhdGlvbi50YXJnZXQpXG5cdH1cbn0pO1xuXG5mb3JtLmluaXQoe1xuXHRuYW1lOiAnQ29DcmVhdGVTZWxlY3QnLFxuXHRzZWxlY3RvcjogXCJjb2NyZWF0ZS1zZWxlY3RcIixcblx0Y2FsbGJhY2s6IGZ1bmN0aW9uKGVsKSB7XG5cdFx0U2VsZWN0QWRhcHRlci5zYXZlKGVsKTtcblx0fVxufSk7XG5leHBvcnQgZGVmYXVsdCBDb0NyZWF0ZVNlbGVjdDtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../CoCreate-select/src/index.js\n")},"../CoCreate-select/src/select.js":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.default = void 0;\n\nvar _src = _interopRequireDefault(__webpack_require__(/*! ../../CoCreate-observer/src */ \"../CoCreate-observer/src/index.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst CoCreateSelect = {\n  init: function () {\n    this.initElement(); // this.__initEvents()\n  },\n  initElement: function (container) {\n    const mainContainer = container || document;\n\n    if (!mainContainer.querySelectorAll) {\n      return;\n    }\n\n    let containerList = mainContainer.querySelectorAll('cocreate-select, div.select--field');\n\n    for (let i = 0; i < containerList.length; i++) {\n      let selectContainer = containerList[i];\n\n      this.__initSelect(selectContainer);\n    }\n  },\n  __initEvents: function () {\n    const self = this;\n    document.addEventListener('dndsuccess', function (e) {\n      const {\n        dropedEl,\n        dragedEl\n      } = e.detail;\n\n      if (typeof dropedEl.tagName != 'undefined' && dropedEl.tagName.toLowerCase() == 'cocreate-select' || dropedEl.classList.contains('select--field')) {\n        self.save(dropedEl);\n\n        self.__fireSelectedEvent(dropedEl);\n      }\n    });\n  },\n  __initSelect: function (selectContainer) {\n    if (_src.default.getInitialized(selectContainer, \"cocreate-select\")) {\n      return;\n    }\n\n    _src.default.setInitialized(selectContainer, \"cocreate-select\");\n\n    let input = selectContainer.querySelector('input');\n    let ul_selector = selectContainer.querySelector('ul.selectable--list');\n    const self = this;\n\n    if (input) {\n      input.addEventListener('keydown', function (e) {\n        let keyCode = e.keyCode;\n\n        if (keyCode == 13) {\n          e.preventDefault();\n        }\n\n        if (keyCode == 13 && this.value.length > 0) {\n          self.__selectValue(this.value, selectContainer);\n\n          self.save(selectContainer);\n\n          self.__fireSelectedEvent(selectContainer);\n\n          this.value = '';\n        } else if (keyCode == 8 && !this.value.length) {\n          let selectedItems = selectContainer.querySelectorAll('[selected]');\n\n          if (selectedItems.length > 0) {\n            selectedItems[selectedItems.length - 1].remove();\n            self.save(selectContainer);\n\n            self.__fireSelectedEvent(selectContainer);\n          }\n        }\n      });\n    }\n\n    document.addEventListener('click', function (event) {\n      var isClickInside = selectContainer.contains(event.target);\n\n      if (!isClickInside) {\n        self.__closeDropDown(selectContainer);\n      }\n    });\n    ul_selector.addEventListener('click', function (e) {\n      if (!e.target.matches('li')) {\n        let li = e.target;\n\n        while (typeof li.tagName != 'undefined' && li.tagName.toLowerCase() != 'li') {\n          li = li.parentNode;\n        }\n\n        if (li.classList && li.classList.contains('selectable')) {\n          // check if data exist\n          let value = li.getAttribute('value');\n          let selectValue = self.getValue(selectContainer);\n          if (value == selectValue || selectValue.indexOf(value) > -1) return; /// here emit event\n\n          self.__selectItem(li, selectContainer);\n\n          self.save(selectContainer);\n\n          self.__fireSelectedEvent(selectContainer);\n        }\n      }\n    });\n    selectContainer.addEventListener('click', function (e) {\n      if (e.target.matches('.remove')) {\n        e.target.parentNode.remove();\n        self.save(selectContainer);\n\n        self.__fireSelectedEvent(selectContainer);\n\n        return;\n      }\n\n      if (!ul_selector.classList.contains('open')) {\n        self.__openDropDown(selectContainer);\n      }\n\n      let input = selectContainer.querySelector('input');\n\n      if (input) {\n        input.focus();\n      }\n    }, true);\n  },\n  __openDropDown: function (selectContainer, focus = true) {\n    if (focus) {\n      let input = selectContainer.querySelector('input');\n      let ul_selector = selectContainer.querySelector('ul.selectable--list');\n\n      if (input) {\n        input.classList.add('open');\n        input.focus();\n      }\n\n      if (ul_selector && ul_selector) {\n        ul_selector.classList.add('open');\n      }\n\n      selectContainer.dispatchEvent(new CustomEvent('CoCreateSelect-open'));\n    }\n  },\n  __closeDropDown: function (selectContainer) {\n    let input = selectContainer.querySelector('input');\n    let ul_selector = selectContainer.querySelector('ul.selectable--list');\n\n    if (input && input.classList.contains('open')) {\n      input.classList.remove('open');\n    }\n\n    if (ul_selector && ul_selector.classList.contains('open')) {\n      ul_selector.classList.remove('open');\n      selectContainer.dispatchEvent(new CustomEvent('CoCreateSelect-close'));\n    }\n  },\n  setValue: function (data) {\n    const self = this;\n    let selectContainers = document.querySelectorAll('cocreate-select,.select--field');\n    selectContainers.forEach(selectEl => {\n      const collection = selectEl.getAttribute('data-collection') || 'module_activity';\n      const id = selectEl.getAttribute('data-document_id');\n      const name = selectEl.getAttribute('name');\n\n      if (data['collection'] == collection && data['document_id'] == id && name) {\n        self.__renderValue(selectEl, data['data'][name]);\n      }\n    });\n  },\n  renderValue: function (target, value) {\n    this.__renderValue(target, value);\n  },\n  __renderValue: function (selectContainer, values) {\n    if (!values) {\n      return;\n    }\n\n    let selectedItems = selectContainer.querySelectorAll('[selected]');\n    selectedItems.forEach(item => item.remove());\n    let ul_selector = selectContainer.querySelector('ul.selectable--list');\n\n    if (values && typeof values === 'string') {\n      values = [values];\n    }\n\n    for (let i = 0; i < values.length; i++) {\n      const selectedItem = ul_selector.querySelector(\"li[value='\" + values[i] + \"']\");\n\n      if (selectedItem) {\n        this.__selectItem(selectedItem, selectContainer, false);\n      } else {\n        this.__selectValue(values[i], selectContainer, false);\n      }\n    }\n\n    try {\n      if (CoCreateFloatLabel) {\n        CoCreateFloatLabel.update(selectContainer, values && values.length > 0);\n      }\n    } catch (err) {}\n  },\n  __selectValue: function (value, selectContainer) {\n    let currentValue = this.getValue(selectContainer);\n    if (currentValue == value || currentValue.indexOf(value) > -1) return;\n    let searchInput = selectContainer.querySelector('input');\n    let ul_selector = selectContainer.querySelector('ul.selectable--list');\n    let span = document.createElement('span');\n    span.innerHTML = 'x';\n    span.classList.add('remove');\n    let li = document.createElement('li');\n    li.setAttribute('value', value); // li.setAttribute('data-value', value);\n\n    li.innerHTML = value;\n    li.setAttribute('selected', \"\"); // li.classList.add('selected');\n\n    li.classList.remove('selectable');\n    li.appendChild(span);\n    selectContainer.insertBefore(li, searchInput ? searchInput : ul_selector);\n  },\n  __selectItem: function (li, selectContainer, focus = true) {\n    let type = selectContainer.hasAttribute('multiple') ? 'multiple' : 'single';\n    let searchInput = selectContainer.querySelector('input');\n    let ul_selector = selectContainer.querySelector('ul.selectable--list');\n\n    if (type == 'single') {\n      let selectedItems = selectContainer.querySelectorAll('[selected]');\n      selectedItems.forEach(item => item.remove());\n\n      if (searchInput) {\n        searchInput.value = '';\n      }\n    }\n\n    let span = document.createElement('span');\n    span.innerHTML = 'x';\n    span.classList.add('remove');\n    let selectedItem = li.cloneNode(true); // selectedItem.classList.add('selected');\n\n    selectedItem.setAttribute(\"selected\", \"\");\n    selectedItem.classList.remove('selectable');\n    selectedItem.appendChild(span);\n    selectContainer.insertBefore(selectedItem, searchInput ? searchInput : ul_selector);\n\n    if (type == 'single') {\n      this.__closeDropDown(selectContainer);\n    }\n  },\n  getValue: function (node) {\n    let type = node.hasAttribute('multiple') ? 'multiple' : 'single';\n    let selectedItems = node.querySelectorAll('[selected]');\n    let value = [];\n\n    if (selectedItems.length > 0) {\n      selectedItems.forEach(item => value.push(item.getAttribute('value')));\n    }\n\n    value = type === 'multiple' ? value : value[0] || '';\n    return value;\n  },\n  save: function (selectEl) {\n    if (!selectEl) {\n      return;\n    }\n\n    let event = new CustomEvent('CoCreateSelect-save', {\n      detail: {\n        element: selectEl\n      }\n    });\n    document.dispatchEvent(event);\n  },\n  __fireSelectedEvent: function (element) {\n    element.dispatchEvent(new CustomEvent('selectedValue'));\n    element.dispatchEvent(new CustomEvent('input', {\n      bubbles: true\n    }));\n    let value = this.getValue(element);\n    document.dispatchEvent(new CustomEvent('CoCreate-selected', {\n      detail: {\n        element: element,\n        value: value\n      }\n    }));\n  }\n};\nvar _default = CoCreateSelect;\nexports.default = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../CoCreate-select/src/select.js\n")},"../../CoCreateJS/src/common-fun.js":(__unused_webpack_module,exports)=>{"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", ({\n  value: true\n}));\nexports.getCommonParams = getCommonParams;\nexports.getCommonParamsExtend = getCommonParamsExtend;\nexports.generateSocketClient = generateSocketClient;\n\nfunction getCommonParams() {\n  return {\n    "apiKey": config.apiKey,\n    "securityKey": config.securityKey,\n    "organization_id": config.organization_Id\n  };\n}\n\nfunction getCommonParamsExtend(info) {\n  return {\n    "apiKey": info.apiKey || config.apiKey,\n    "securityKey": info.securityKey || config.securityKey,\n    "organization_id": info.organization_id || config.organization_Id\n  };\n}\n\nfunction generateSocketClient(namespace, room) {\n  let ns = namespace || config.organization_Id;\n  let rr = room || \'\';\n\n  if (rr) {\n    return `${ns}/${rr}`;\n  } else {\n    return ns;\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Db0NyZWF0ZS5mbG9hdGluZ0xhYmVsLy4uL0NvQ3JlYXRlSlMvc3JjL2NvbW1vbi1mdW4uanM/Yjg5ZiJdLCJuYW1lcyI6WyJnZXRDb21tb25QYXJhbXMiLCJjb25maWciLCJhcGlLZXkiLCJzZWN1cml0eUtleSIsIm9yZ2FuaXphdGlvbl9JZCIsImdldENvbW1vblBhcmFtc0V4dGVuZCIsImluZm8iLCJvcmdhbml6YXRpb25faWQiLCJnZW5lcmF0ZVNvY2tldENsaWVudCIsIm5hbWVzcGFjZSIsInJvb20iLCJucyIsInJyIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQSxTQUFTQSxlQUFULEdBQ0E7QUFDRSxTQUFPO0FBQ0wsY0FBb0JDLE1BQU0sQ0FBQ0MsTUFEdEI7QUFFTCxtQkFBb0JELE1BQU0sQ0FBQ0UsV0FGdEI7QUFHTCx1QkFBb0JGLE1BQU0sQ0FBQ0c7QUFIdEIsR0FBUDtBQUtEOztBQUVELFNBQVNDLHFCQUFULENBQStCQyxJQUEvQixFQUNBO0FBQ0UsU0FBTztBQUNMLGNBQW9CQSxJQUFJLENBQUNKLE1BQUwsSUFBZUQsTUFBTSxDQUFDQyxNQURyQztBQUVMLG1CQUFvQkksSUFBSSxDQUFDSCxXQUFMLElBQW9CRixNQUFNLENBQUNFLFdBRjFDO0FBR0wsdUJBQW9CRyxJQUFJLENBQUNDLGVBQUwsSUFBd0JOLE1BQU0sQ0FBQ0c7QUFIOUMsR0FBUDtBQUtEOztBQUVELFNBQVNJLG9CQUFULENBQStCQyxTQUEvQixFQUEwQ0MsSUFBMUMsRUFDQTtBQUNFLE1BQUlDLEVBQUUsR0FBR0YsU0FBUyxJQUFJUixNQUFNLENBQUNHLGVBQTdCO0FBQ0EsTUFBSVEsRUFBRSxHQUFHRixJQUFJLElBQUksRUFBakI7O0FBQ0EsTUFBSUUsRUFBSixFQUFRO0FBQ04sV0FBUSxHQUFFRCxFQUFHLElBQUdDLEVBQUcsRUFBbkI7QUFDRCxHQUZELE1BRU87QUFDTCxXQUFPRCxFQUFQO0FBQ0Q7QUFDRiIsImZpbGUiOiIuLi8uLi9Db0NyZWF0ZUpTL3NyYy9jb21tb24tZnVuLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gZ2V0Q29tbW9uUGFyYW1zKCkgXG57XG4gIHJldHVybiB7XG4gICAgXCJhcGlLZXlcIjogICAgICAgICAgIGNvbmZpZy5hcGlLZXksXG4gICAgXCJzZWN1cml0eUtleVwiOiAgICAgIGNvbmZpZy5zZWN1cml0eUtleSxcbiAgICBcIm9yZ2FuaXphdGlvbl9pZFwiOiAgY29uZmlnLm9yZ2FuaXphdGlvbl9JZCxcbiAgfVxufVxuXG5mdW5jdGlvbiBnZXRDb21tb25QYXJhbXNFeHRlbmQoaW5mbykgXG57XG4gIHJldHVybiB7XG4gICAgXCJhcGlLZXlcIjogICAgICAgICAgIGluZm8uYXBpS2V5IHx8IGNvbmZpZy5hcGlLZXksXG4gICAgXCJzZWN1cml0eUtleVwiOiAgICAgIGluZm8uc2VjdXJpdHlLZXkgfHwgY29uZmlnLnNlY3VyaXR5S2V5LFxuICAgIFwib3JnYW5pemF0aW9uX2lkXCI6ICBpbmZvLm9yZ2FuaXphdGlvbl9pZCB8fCBjb25maWcub3JnYW5pemF0aW9uX0lkLFxuICB9XG59XG5cbmZ1bmN0aW9uIGdlbmVyYXRlU29ja2V0Q2xpZW50IChuYW1lc3BhY2UsIHJvb20pIFxue1xuICBsZXQgbnMgPSBuYW1lc3BhY2UgfHwgY29uZmlnLm9yZ2FuaXphdGlvbl9JZFxuICBsZXQgcnIgPSByb29tIHx8ICcnO1xuICBpZiAocnIpIHtcbiAgICByZXR1cm4gYCR7bnN9LyR7cnJ9YFxuICB9IGVsc2Uge1xuICAgIHJldHVybiBucztcbiAgfVxufVxuXG5leHBvcnQge2dldENvbW1vblBhcmFtcywgZ2V0Q29tbW9uUGFyYW1zRXh0ZW5kLCBnZW5lcmF0ZVNvY2tldENsaWVudH07Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../CoCreateJS/src/common-fun.js\n')},"../../CoCreateJS/src/core.js":(__unused_webpack_module,exports)=>{"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.default = core;\n// ***********   define variables end ***************** /// \nconst CoCreateCore = {\n  socketInitFuncs: [],\n  moduleSelectors: [],\n  socket: null,\n  host: 'server.cocreate.app',\n  setSocket: function (socket) {\n    this.socket = socket;\n  },\n  init: function (host, namespace) {\n    if (host) {\n      this.host = host;\n    }\n\n    this.__setConfig();\n\n    this.createGeneralSocket(host, namespace || config.organization_Id);\n    this.initSocketListener();\n    this.createUserSocket(host);\n  },\n  __setConfig: function () {\n    let orgId = window.localStorage.getItem('organization_id');\n    let securityKey = window.localStorage.getItem('securityKey');\n    let apiKey = window.localStorage.getItem('apiKey');\n    if (orgId) config['organization_Id'] = orgId;\n    if (apiKey) config['apiKey'] = apiKey;\n    if (securityKey) config['securityKey'] = securityKey;\n  },\n  initSocketListener: function () {\n    const self = this;\n    this.socket.listen('connect', function (data, room) {\n      if (room == self.socket.getGlobalScope()) {\n        self.socketInitFuncs.forEach(func => {\n          func.initFunc.call(func.instance);\n        });\n      }\n    });\n    this.socket.listen('readDocument', function (data) {\n      const metadata = data.metadata; // if (metadata && metadata.type == 'crdt') {\n      //   self.initRenderCrdtData(data);\n      // } else {\n      //   // self.renderModules(data)\n      // }\n\n      return data;\n    });\n    this.socket.listen('updateDocument', function (data) {// self.renderModules(data)\n    });\n    this.socket.listen('deletedDocument', function (data) {\n      console.log(data);\n    });\n    this.socket.listen('sendMessage', function (data) {\n      console.log(data);\n    });\n    this.listenMessage('downloadFileInfo', function (data) {\n      self.socket.saveFileName = data.file_name;\n    });\n  },\n  createUserSocket: function (host) {\n    var user_id = window.localStorage.getItem('user_id');\n\n    if (user_id) {\n      this.socket.create({\n        namespace: 'users',\n        room: user_id,\n        host: host\n      });\n    }\n  },\n  createGeneralSocket: function (host, namespace) {\n    if (namespace) {\n      this.socket.create({\n        namespace: namespace,\n        room: null,\n        host: host\n      });\n      this.socket.setGlobalScope(namespace);\n    } else {\n      this.socket.create({\n        namespace: null,\n        room: null,\n        host: host\n      });\n    }\n  },\n  registerInit: function (initFunc, instance) {\n    this.socketInitFuncs.push({\n      initFunc,\n      instance: instance || window\n    });\n  },\n  // registerSelector: function(selector) {\n  //   if (this.moduleSelectors.indexOf(selector) === -1) {\n  //     this.moduleSelectors.push(selector);\n  //   }\n  // },\n  // getSelectors: function(selector) {\n  //   return this.moduleSelectors.join(\",\");\n  // },\n  listenMessage: function (message, fun) {\n    this.socket.listen(message, fun);\n  },\n  createSocket: function (config) {\n    this.socket.create(config);\n  },\n  destroySocket: function (config) {\n    const {\n      namespace,\n      room\n    } = config;\n    const key = this.socket.getKey(namespace, room);\n    let socket = this.socket.sockets.get(key);\n\n    if (!socket) {\n      return;\n    }\n\n    this.socket.destroy(socket, key);\n  }\n};\n\nfunction core(socket) {\n  CoCreateCore.setSocket(socket);\n  return CoCreateCore;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../CoCreateJS/src/core.js\n")},"../../CoCreateJS/src/crud.js":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.default = CRUD;\n\nvar _commonFun = __webpack_require__(/*! ./common-fun.js */ \"../../CoCreateJS/src/common-fun.js\");\n\n// ***********   define variables end ***************** /// \nconst CoCreateCRUD = {\n  socket: null,\n  setSocket: function (socket) {\n    this.socket = socket;\n  },\n\n  /*\n   \n    CoCreate.crud.readDcoumentList {\n      collection: \"modules\",\n      element: \"xxxx\",\n      metadata: \"\",\n      operator: {\n        fetch: {\n          name: 'xxxx',\n          value: 'xxxxx'\n        },\n        filters: [{\n          name: 'field1',\n          operator: \"contain | range | eq | ne | lt | lte | gt | gte | in | nin\",\n          value: [v1, v2, ...]\n        }, {\n          name: \"_id\",\n          opreator: \"in\",\n          value: [\"id1\"]\n        }, {\n          ....\n        }],\n        orders: [{\n          name: 'field-x',\n          type: 1 | -1\n        }],\n        search: {\n          type: 'or | and',\n          value: [value1, value2]\n        },\n        \n        startIndex: 0 (integer),\n        count: 0 (integer)\n      },\n      \n      is_collection: true | false,\n      //. case fetch document case\n      created_ids : [id1, id2, ...],\n      \n      \n      -------- additional response data -----------\n      data: [] // array\n    }\n  */\n  readDocumentList(info) {\n    if (!info) return;\n    let request_data = (0, _commonFun.getCommonParams)();\n\n    if (!info.collection || !info.operator) {\n      return;\n    }\n\n    request_data = { ...request_data,\n      ...info\n    };\n    this.socket.send('readDocumentList', request_data);\n  },\n\n  /*\n  CoCreate.crud.createDocument({\n    namespace:'',\n    room:'',\n    broadcast: true/false, (default=ture)\n    broadcast_sender: true/false, (default=true) \n    \n    collection: \"test123\",\n    data:{\n    \tname1:“hello”,\n    \tname2:  “hello1”\n    },\n    element: “xxxx”,\n    metaData: \"xxxx\"\n  }),\n  */\n  // data param needs organization_id field added to pass security check\n  createDocument: function (info) {\n    if (info === null) {\n      return;\n    }\n\n    let request_data = (0, _commonFun.getCommonParams)();\n    request_data['collection'] = info['collection'] || 'module_activities';\n    let data = info.data || {};\n\n    if (!data['organization_id']) {\n      data['organization_id'] = config.organization_Id;\n    }\n\n    if (info['data']) {\n      data = { ...data,\n        ...info['data']\n      };\n    }\n\n    request_data['data'] = data;\n\n    if (info['metadata']) {\n      request_data['metadata'] = info['metadata'];\n    }\n\n    request_data['element'] = info['element'];\n    /** socket parameters **/\n    // if (info['broadcast'] === undefined) {\n    //   request_data['broadcast'] = true;\n    // }\n    // if (info['broadcast_sender'] === undefined) {\n    //   request_data['broadcast_sender'] = true;\n    // }\n\n    const room = (0, _commonFun.generateSocketClient)(info.namespace, info.room);\n    this.socket.send('createDocument', request_data, room);\n  },\n\n  /*\n  CoCreate.crud.updateDocument({\n    namespace: '',\n    room: '',\n    broadcast: true/false,\n    broadcast_sender: true/false,\n    \n    collection: \"test123\",\n    document_id: \"document_id\",\n    data:{\n    \tname1:“hello”,\n    \tname2:  “hello1”\n    },\n    delete_fields:[\"name3\", \"name4\"],\n    element: “xxxx”,\n    metaData: \"xxxx\"\n  }),\n  */\n  updateDocument: function (info) {\n    if (!info || !info['document_id']) return;\n    let request_data = (0, _commonFun.getCommonParamsExtend)(info);\n    request_data['collection'] = info['collection'] || 'module_activities';\n    request_data['document_id'] = info['document_id'];\n    if (typeof info['data'] === 'object') request_data['set'] = info['data'];\n    if (Array.isArray(info['delete_fields'])) request_data['unset'] = info['delete_fields'];\n    if (!request_data['set'] && !request_data['unset']) return;\n    request_data['element'] = info['element'];\n    request_data['metadata'] = info['metadata'];\n\n    if (info.upsert) {\n      request_data['upsert'] = true;\n    }\n\n    if (info.broadcast === false) {\n      request_data['broadcast'] = false;\n    }\n    /** socket parameters **/\n    // if (info['broadcast'] === undefined) {\n    //   request_data['broadcast'] = true;\n    // }\n\n\n    request_data['broadcast_sender'] = info.broadcast_sender;\n\n    if (info['broadcast_sender'] === undefined) {\n      request_data['broadcast_sender'] = true;\n    }\n\n    const room = (0, _commonFun.generateSocketClient)(info.namespace, info.room);\n    this.socket.send('updateDocument', request_data, room);\n  },\n\n  /*\n  CoCreate.crud.readDocument({\n    collection: \"test123\",\n    document_id: \"document_id\",\n    element: “xxxx”,\n    metaData: \"xxxx\",\n    exclude_fields: [] \n  }),\n  */\n  readDocument: function (info) {\n    if (info === null) {\n      return;\n    }\n\n    if (!info['document_id'] || !info) {\n      return;\n    }\n\n    let request_data = (0, _commonFun.getCommonParams)();\n    request_data['collection'] = info['collection'];\n    request_data['document_id'] = info['document_id'];\n\n    if (info['exclude_fields']) {\n      request_data['exclude_fields'] = info['exclude_fields'];\n    }\n\n    if (info['element']) {\n      request_data['element'] = info['element'];\n    }\n\n    request_data['metadata'] = info['metadata'];\n    this.socket.send('readDocument', request_data);\n  },\n\n  /*\n  CoCreate.crud.deleteDocument({\n    namespace: '',\n    room: '',\n    broadcast: true/false,\n    broadcast_sender: true/false,\n    \n    collection: \"module\",\n    document_id: \"\",\n    element: “xxxx”,\n    metadata: \"xxxx\"\n  }),\n  */\n  deleteDocument: function (info) {\n    if (!info['document_id'] || !info) {\n      return;\n    }\n\n    let request_data = (0, _commonFun.getCommonParams)();\n    request_data['collection'] = info['collection'];\n    request_data['document_id'] = info['document_id'];\n\n    if (info['element']) {\n      request_data['element'] = info['element'];\n    }\n\n    request_data['metadata'] = info['metadata'];\n    /** socket parameters **/\n    // if (info['broadcast'] === undefined) {\n    //   request_data['broadcast'] = true;\n    // }\n    // if (info['broadcast_sender'] === undefined) {\n    //   request_data['broadcast_sender'] = true;\n    // }\n\n    const room = (0, _commonFun.generateSocketClient)(info.namespace, info.room);\n    this.socket.send('deleteDocument', request_data, room);\n  },\n\n  /** export / import db functions **/\n\n  /*\n  readDocument({\n   collection: \"test123\",\n   element: “xxxx”,\n   metaData: \"xxxx\",\n  }),\n  */\n  exportCollection: function (info) {\n    if (info === null) {\n      return;\n    }\n\n    let request_data = (0, _commonFun.getCommonParams)();\n    request_data['collection'] = info['collection'];\n    request_data['export_type'] = info['export_type'];\n    request_data['metadata'] = info['metadata'];\n    this.socket.send('exportDB', request_data);\n  },\n\n  /*\n  readDocument({\n    collection: \"test123\",\n    file: file\n  }),\n  */\n  importCollection: function (info) {\n    const {\n      file\n    } = info;\n\n    if (info === null || !(file instanceof File)) {\n      return;\n    }\n\n    const extension = file.name.split(\".\").pop();\n\n    if (!['json', 'csv'].some(item => item === extension)) {\n      return;\n    }\n\n    let request_data = (0, _commonFun.getCommonParams)();\n    request_data['collection'] = info['collection'];\n    request_data['import_type'] = extension;\n    this.socket.send('importDB', request_data);\n    this.socket.sendFile(file);\n  },\n  //. message listener\n  listenMessage: function (message, fun) {\n    this.socket.listen(message, fun);\n  },\n  listenerReadDocument: function (fun) {\n    this.socket.listen(\"readDocument\", fun);\n  },\n  listenerCreateDocument: function (fun) {\n    this.socket.listen(\"createDocument\", fun);\n  },\n  listenerDeleteDocument: function (fun) {\n    this.socket.listen(\"deleteDocument\", fun);\n  },\n  listenerUpdateDocument: function (fun) {\n    this.socket.listen(\"updateDocument\", fun);\n  },\n  listenerReadDocumentList: function (fun) {\n    this.socket.listen(\"readDocumentList\", fun);\n  }\n};\n\nfunction CRUD(socket) {\n  CoCreateCRUD.setSocket(socket);\n  return CoCreateCRUD;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../CoCreateJS/src/crud.js\n")},"../../CoCreateJS/src/index.js":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", ({\n  value: true\n}));\nexports.addComponent = addComponent;\nexports.removeComponent = removeComponent;\nObject.defineProperty(exports, "utils", ({\n  enumerable: true,\n  get: function () {\n    return _utils.default;\n  }\n}));\nexports.message = exports.crud = exports.socketApi = exports.socket = exports.core = void 0;\n\nvar _socket = _interopRequireDefault(__webpack_require__(/*! ./socket.js */ "../../CoCreateJS/src/socket.js"));\n\nvar _crud = _interopRequireDefault(__webpack_require__(/*! ./crud.js */ "../../CoCreateJS/src/crud.js"));\n\nvar _core = _interopRequireDefault(__webpack_require__(/*! ./core.js */ "../../CoCreateJS/src/core.js"));\n\nvar _utils = _interopRequireDefault(__webpack_require__(/*! ./utils.js */ "../../CoCreateJS/src/utils.js"));\n\nvar _message = _interopRequireDefault(__webpack_require__(/*! ./message.js */ "../../CoCreateJS/src/message.js"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// import CRDT from "./crdt.js"\nlet socket = new _socket.default(\'ws\');\nexports.socket = socket;\nlet socketApi = new _socket.default(\'api\');\nexports.socketApi = socketApi;\nlet core = (0, _core.default)(socket);\nexports.core = core;\nlet crud = (0, _crud.default)(socket);\nexports.crud = crud;\nlet message = (0, _message.default)(socket);\nexports.message = message;\ncore.init(window.config.host ? window.config.host : \'server.cocreate.app\');\n\nfunction addComponent(key, component) {\n  this[key] = component;\n}\n\nfunction removeComponent(key) {\n  if (this[key]) {}\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Db0NyZWF0ZS5mbG9hdGluZ0xhYmVsLy4uL0NvQ3JlYXRlSlMvc3JjL2luZGV4LmpzPzI4OWEiXSwibmFtZXMiOlsic29ja2V0IiwiQ29DcmVhdGVTb2NrZXQiLCJzb2NrZXRBcGkiLCJjb3JlIiwiY3J1ZCIsIm1lc3NhZ2UiLCJpbml0Iiwid2luZG93IiwiY29uZmlnIiwiaG9zdCIsImFkZENvbXBvbmVudCIsImtleSIsImNvbXBvbmVudCIsInJlbW92ZUNvbXBvbmVudCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7Ozs7QUFFQTtBQUNBLElBQUlBLE1BQU0sR0FBRyxJQUFJQyxlQUFKLENBQW1CLElBQW5CLENBQWI7O0FBQ0EsSUFBSUMsU0FBUyxHQUFHLElBQUlELGVBQUosQ0FBbUIsS0FBbkIsQ0FBaEI7O0FBRUEsSUFBSUUsSUFBSSxHQUFHLG1CQUFLSCxNQUFMLENBQVg7O0FBQ0EsSUFBSUksSUFBSSxHQUFHLG1CQUFLSixNQUFMLENBQVg7O0FBQ0EsSUFBSUssT0FBTyxHQUFHLHNCQUFRTCxNQUFSLENBQWQ7O0FBRUFHLElBQUksQ0FBQ0csSUFBTCxDQUFVQyxNQUFNLENBQUNDLE1BQVAsQ0FBY0MsSUFBZCxHQUFxQkYsTUFBTSxDQUFDQyxNQUFQLENBQWNDLElBQW5DLEdBQTBDLHFCQUFwRDs7QUFFQSxTQUFTQyxZQUFULENBQXNCQyxHQUF0QixFQUEyQkMsU0FBM0IsRUFBc0M7QUFDbEMsT0FBS0QsR0FBTCxJQUFZQyxTQUFaO0FBQ0g7O0FBRUQsU0FBU0MsZUFBVCxDQUF5QkYsR0FBekIsRUFBOEI7QUFDMUIsTUFBSSxLQUFLQSxHQUFMLENBQUosRUFBZSxDQUVkO0FBQ0oiLCJmaWxlIjoiLi4vLi4vQ29DcmVhdGVKUy9zcmMvaW5kZXguanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgQ29DcmVhdGVTb2NrZXQgZnJvbSBcIi4vc29ja2V0LmpzXCJcbmltcG9ydCBDUlVEIGZyb20gXCIuL2NydWQuanNcIlxuaW1wb3J0IENvcmUgZnJvbSBcIi4vY29yZS5qc1wiXG5pbXBvcnQgdXRpbHMgZnJvbSBcIi4vdXRpbHMuanNcIlxuaW1wb3J0IE1lc3NhZ2UgZnJvbSBcIi4vbWVzc2FnZS5qc1wiXG5cbi8vIGltcG9ydCBDUkRUIGZyb20gXCIuL2NyZHQuanNcIlxubGV0IHNvY2tldCA9IG5ldyBDb0NyZWF0ZVNvY2tldCgnd3MnKTtcbmxldCBzb2NrZXRBcGkgPSBuZXcgQ29DcmVhdGVTb2NrZXQoJ2FwaScpO1xuXG5sZXQgY29yZSA9IENvcmUoc29ja2V0KVxubGV0IGNydWQgPSBDUlVEKHNvY2tldClcbmxldCBtZXNzYWdlID0gTWVzc2FnZShzb2NrZXQpXG5cbmNvcmUuaW5pdCh3aW5kb3cuY29uZmlnLmhvc3QgPyB3aW5kb3cuY29uZmlnLmhvc3QgOiAnc2VydmVyLmNvY3JlYXRlLmFwcCcpO1xuXG5mdW5jdGlvbiBhZGRDb21wb25lbnQoa2V5LCBjb21wb25lbnQpIHtcbiAgICB0aGlzW2tleV0gPSBjb21wb25lbnQ7XG59XG5cbmZ1bmN0aW9uIHJlbW92ZUNvbXBvbmVudChrZXkpIHtcbiAgICBpZiAodGhpc1trZXldKSB7XG5cbiAgICB9XG59XG5cbmV4cG9ydCB7XG4gICAgY29yZSxcbiAgICBzb2NrZXQsXG4gICAgc29ja2V0QXBpLFxuICAgIGNydWQsXG4gICAgdXRpbHMsXG4gICAgbWVzc2FnZSxcbiAgICBhZGRDb21wb25lbnQsXG4gICAgcmVtb3ZlQ29tcG9uZW50XG59O1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../CoCreateJS/src/index.js\n')},"../../CoCreateJS/src/message.js":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.default = Message;\n\nvar _commonFun = __webpack_require__(/*! ./common-fun.js */ \"../../CoCreateJS/src/common-fun.js\");\n\nconst CoCreateMessage = {\n  socket: null,\n  setSocket: function (socket) {\n    this.socket = socket;\n  },\n\n  /*\n  CoCreate.message.send({\n     namespace: '',\n     room: '',\n     broadcast: true/false,\n     broadcast_sender: true/false\n     \n     rooms: [r1, r2],\n     emit: {\n       message': 'nice game',\n       data': 'let's play a game ....'\n     }\n   })\n  */\n  send: function (data) {\n    let request_data = (0, _commonFun.getCommonParams)();\n\n    if (!data || !data.emit) {\n      return;\n    }\n\n    request_data = { ...request_data,\n      ...data\n    };\n    /** socket parameters **/\n    // if (data['broadcast'] === undefined) {\n    //   request_data['broadcast'] = true;\n    // }\n    // if (data['broadcast_sender'] === undefined) {\n    //   request_data['broadcast_sender'] = true;\n    // }\n\n    const room = (0, _commonFun.generateSocketClient)(data.namespace, data.room);\n    this.socket.send('sendMessage', request_data, room);\n  },\n  receive: function (message, fun) {\n    this.socket.listen(message, fun);\n  }\n};\n\nfunction Message(socket) {\n  CoCreateMessage.setSocket(socket);\n  return CoCreateMessage;\n}\n\n;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Db0NyZWF0ZS5mbG9hdGluZ0xhYmVsLy4uL0NvQ3JlYXRlSlMvc3JjL21lc3NhZ2UuanM/Nzg0MiJdLCJuYW1lcyI6WyJDb0NyZWF0ZU1lc3NhZ2UiLCJzb2NrZXQiLCJzZXRTb2NrZXQiLCJzZW5kIiwiZGF0YSIsInJlcXVlc3RfZGF0YSIsImVtaXQiLCJyb29tIiwibmFtZXNwYWNlIiwicmVjZWl2ZSIsIm1lc3NhZ2UiLCJmdW4iLCJsaXN0ZW4iLCJNZXNzYWdlIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBRUEsTUFBTUEsZUFBZSxHQUFHO0FBQ3RCQyxRQUFNLEVBQUUsSUFEYztBQUV0QkMsV0FBUyxFQUFFLFVBQVNELE1BQVQsRUFBaUI7QUFDMUIsU0FBS0EsTUFBTCxHQUFjQSxNQUFkO0FBQ0QsR0FKcUI7O0FBS3ZCO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQ0UsTUFBSSxFQUFFLFVBQVNDLElBQVQsRUFBZTtBQUNsQixRQUFJQyxZQUFZLEdBQUcsaUNBQW5COztBQUVBLFFBQUksQ0FBQ0QsSUFBRCxJQUFTLENBQUNBLElBQUksQ0FBQ0UsSUFBbkIsRUFBeUI7QUFDdkI7QUFDRDs7QUFDREQsZ0JBQVksR0FBRyxFQUFDLEdBQUdBLFlBQUo7QUFBa0IsU0FBR0Q7QUFBckIsS0FBZjtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBLFVBQU1HLElBQUksR0FBRyxxQ0FBcUJILElBQUksQ0FBQ0ksU0FBMUIsRUFBcUNKLElBQUksQ0FBQ0csSUFBMUMsQ0FBYjtBQUVBLFNBQUtOLE1BQUwsQ0FBWUUsSUFBWixDQUFpQixhQUFqQixFQUFnQ0UsWUFBaEMsRUFBOENFLElBQTlDO0FBQ0YsR0FyQ3NCO0FBdUN2QkUsU0FBTyxFQUFFLFVBQVNDLE9BQVQsRUFBa0JDLEdBQWxCLEVBQXVCO0FBQzlCLFNBQUtWLE1BQUwsQ0FBWVcsTUFBWixDQUFtQkYsT0FBbkIsRUFBNEJDLEdBQTVCO0FBQ0Q7QUF6Q3NCLENBQXhCOztBQTRDZSxTQUFTRSxPQUFULENBQWlCWixNQUFqQixFQUF5QjtBQUN0Q0QsaUJBQWUsQ0FBQ0UsU0FBaEIsQ0FBMEJELE1BQTFCO0FBQ0EsU0FBT0QsZUFBUDtBQUNEOztBQUFBIiwiZmlsZSI6Ii4uLy4uL0NvQ3JlYXRlSlMvc3JjL21lc3NhZ2UuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge2dldENvbW1vblBhcmFtcywgZ2V0Q29tbW9uUGFyYW1zRXh0ZW5kLCBnZW5lcmF0ZVNvY2tldENsaWVudH0gZnJvbSBcIi4vY29tbW9uLWZ1bi5qc1wiXG5cbmNvbnN0IENvQ3JlYXRlTWVzc2FnZSA9IHtcbiAgc29ja2V0OiBudWxsLFxuICBzZXRTb2NrZXQ6IGZ1bmN0aW9uKHNvY2tldCkge1xuICAgIHRoaXMuc29ja2V0ID0gc29ja2V0O1xuICB9LFxuIC8qXG4gQ29DcmVhdGUubWVzc2FnZS5zZW5kKHtcbiAgICBuYW1lc3BhY2U6ICcnLFxuICAgIHJvb206ICcnLFxuICAgIGJyb2FkY2FzdDogdHJ1ZS9mYWxzZSxcbiAgICBicm9hZGNhc3Rfc2VuZGVyOiB0cnVlL2ZhbHNlXG4gICAgXG4gICAgcm9vbXM6IFtyMSwgcjJdLFxuICAgIGVtaXQ6IHtcbiAgICAgIG1lc3NhZ2UnOiAnbmljZSBnYW1lJyxcbiAgICAgIGRhdGEnOiAnbGV0J3MgcGxheSBhIGdhbWUgLi4uLidcbiAgICB9XG4gIH0pXG4gKi9cbiBzZW5kOiBmdW5jdGlvbihkYXRhKSB7XG4gICAgbGV0IHJlcXVlc3RfZGF0YSA9IGdldENvbW1vblBhcmFtcygpO1xuICAgIFxuICAgIGlmICghZGF0YSB8fCAhZGF0YS5lbWl0KSB7XG4gICAgICByZXR1cm47ICAgICBcbiAgICB9XG4gICAgcmVxdWVzdF9kYXRhID0gey4uLnJlcXVlc3RfZGF0YSwgLi4uZGF0YX1cbiAgICBcbiAgICAvKiogc29ja2V0IHBhcmFtZXRlcnMgKiovXG4gICAgLy8gaWYgKGRhdGFbJ2Jyb2FkY2FzdCddID09PSB1bmRlZmluZWQpIHtcbiAgICAvLyAgIHJlcXVlc3RfZGF0YVsnYnJvYWRjYXN0J10gPSB0cnVlO1xuICAgIC8vIH1cbiAgICAvLyBpZiAoZGF0YVsnYnJvYWRjYXN0X3NlbmRlciddID09PSB1bmRlZmluZWQpIHtcbiAgICAvLyAgIHJlcXVlc3RfZGF0YVsnYnJvYWRjYXN0X3NlbmRlciddID0gdHJ1ZTtcbiAgICAvLyB9XG4gICAgY29uc3Qgcm9vbSA9IGdlbmVyYXRlU29ja2V0Q2xpZW50KGRhdGEubmFtZXNwYWNlLCBkYXRhLnJvb20pO1xuICAgIFxuICAgIHRoaXMuc29ja2V0LnNlbmQoJ3NlbmRNZXNzYWdlJywgcmVxdWVzdF9kYXRhLCByb29tKVxuIH0sXG4gXG4gcmVjZWl2ZTogZnVuY3Rpb24obWVzc2FnZSwgZnVuKSB7XG4gICB0aGlzLnNvY2tldC5saXN0ZW4obWVzc2FnZSwgZnVuKTtcbiB9LFxufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBNZXNzYWdlKHNvY2tldCkge1xuICBDb0NyZWF0ZU1lc3NhZ2Uuc2V0U29ja2V0KHNvY2tldClcbiAgcmV0dXJuIENvQ3JlYXRlTWVzc2FnZTtcbn07XG5cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../../CoCreateJS/src/message.js\n")},"../../CoCreateJS/src/socket.js":(__unused_webpack_module,exports)=>{"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.default = void 0;\n\nclass CoCreateSocket {\n  constructor(prefix = \"crud\") {\n    this.prefix = prefix || \"crud\";\n    this.sockets = new Map();\n    this.listeners = new Map();\n    this.messageQueue = new Map();\n    this.saveFileName = '';\n    this.globalScope = \"\";\n  }\n\n  setGlobalScope(scope) {\n    this.globalScope = `${this.prefix}/${scope}`;\n  }\n\n  getGlobalScope() {\n    return this.globalScope;\n  }\n  /**\n   * config: {namespace, room, host}\n   */\n\n\n  create(config) {\n    const {\n      namespace,\n      room\n    } = config;\n    const key = this.getKey(namespace, room);\n\n    let _this = this;\n\n    let socket;\n\n    if (this.sockets.get(key)) {\n      socket = this.sockets.get(key);\n      console.log('SOcket already has been register');\n      return;\n    }\n\n    let w_protocol = window.location.protocol;\n\n    if (window.location.protocol === \"about:\") {\n      w_protocol = window.parent.location.protocol;\n    }\n\n    let protocol = w_protocol === 'http:' ? 'ws' : 'wss';\n    const port = config.port ? config.port : 8088;\n    let socket_url = `${protocol}://${window.location.host}:${port}/${key}`;\n\n    if (config.host) {\n      if (config.host.includes(\"://\")) {\n        socket_url = `${config.host}/${key}`;\n      } else {\n        socket_url = `${protocol}://${config.host}:${port}/${key}`;\n      }\n    }\n\n    socket = new WebSocket(socket_url);\n\n    socket.onopen = function (event) {\n      console.log('created socket: ' + key);\n      const messages = _this.messageQueue.get(key) || [];\n      console.log(messages);\n      messages.forEach(msg => socket.send(JSON.stringify(msg)));\n\n      _this.sockets.set(key, socket);\n\n      _this.messageQueue.set(key, []);\n    };\n\n    socket.onclose = function (event) {\n      switch (event.code) {\n        case 1000:\n          // close normal\n          console.log(\"websocket: closed\");\n          break;\n\n        default:\n          _this.destroy(socket, key);\n\n          _this.reconnect(socket, config);\n\n          break;\n      }\n    };\n\n    socket.onerror = function (err) {\n      console.log('Socket error');\n\n      _this.destroy(socket, key);\n\n      _this.reconnect(socket, config);\n    };\n\n    socket.onmessage = function (data) {\n      try {\n        if (data.data instanceof Blob) {\n          _this.saveFile(data.data);\n\n          return;\n        }\n\n        let rev_data = JSON.parse(data.data);\n\n        const listeners = _this.listeners.get(rev_data.action);\n\n        if (!listeners) {\n          return;\n        }\n\n        listeners.forEach(listener => {\n          listener(rev_data.data, key);\n        });\n      } catch (e) {\n        console.log(e);\n      }\n    };\n  }\n  /**\n   * \n   */\n\n\n  send(action, data, room) {\n    const obj = {\n      action: action,\n      data: data\n    };\n    const key = this.getKeyByRoom(room);\n    const socket = this.getByRoom(room);\n\n    if (socket) {\n      socket.send(JSON.stringify(obj));\n    } else {\n      if (this.messageQueue.get(key)) {\n        this.messageQueue.get(key).push(obj);\n      } else {\n        this.messageQueue.set(key, [obj]);\n      }\n    }\n  }\n\n  sendFile(file, room) {\n    const socket = this.getByRoom(room);\n\n    if (socket) {\n      socket.send(file);\n    }\n  }\n  /**\n   * scope: ns/room\n   */\n\n\n  listen(type, callback) {\n    if (!this.listeners.get(type)) {\n      this.listeners.set(type, [callback]);\n    } else {\n      this.listeners.get(type).push(callback);\n    }\n  }\n\n  reconnect(socket, config) {\n    let _this = this;\n\n    setTimeout(function () {\n      _this.create(config);\n    }, 1000);\n  }\n\n  destroy(socket, key) {\n    if (socket) {\n      socket.onerror = socket.onopen = socket.onclose = null;\n      socket.close();\n      socket = null;\n    }\n\n    if (this.sockets.get(key)) {\n      this.sockets.delete(key);\n    }\n  }\n\n  getKey(namespace, room) {\n    let key = `${this.prefix}`;\n\n    if (namespace && namespace != '') {\n      if (room && room != '') {\n        key += `/${namespace}/${room}`;\n      } else {\n        key += `/${namespace}`;\n      }\n    }\n\n    return key;\n  }\n\n  getByRoom(room) {\n    let key = this.getKeyByRoom(room);\n    return this.sockets.get(key);\n  }\n\n  getKeyByRoom(room) {\n    let key = this.globalScope;\n\n    if (room) {\n      key = `${this.prefix}/${room}`;\n    }\n\n    return key;\n  }\n\n  saveFile(blob) {\n    // const {filename} = window.saveFileInfo;\n    const file_name = this.saveFileName || 'downloadFile';\n    var a = document.createElement(\"a\");\n    document.body.appendChild(a);\n    a.style = \"display: none\";\n    let url = window.URL.createObjectURL(blob);\n    a.href = url;\n    a.download = file_name;\n    a.click();\n    window.URL.revokeObjectURL(url);\n    this.saveFileName = '';\n  }\n\n}\n\nvar _default = CoCreateSocket;\nexports.default = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../CoCreateJS/src/socket.js\n")},"../../CoCreateJS/src/utils.js":(__unused_webpack_module,exports)=>{"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", ({\n  value: true\n}));\nexports.default = void 0;\n\n/**\n * Created by jin\n * 2020-04-03\n */\nconst CoCreateUtils = {\n  generateUUID: function (length = 36) {\n    // if (length == 10) {\n    //   var result           = \'\';\n    //   var characters       = \'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\';\n    //   var charactersLength = characters.length;\n    //   for ( var i = 0; i < length; i++ ) {\n    //     result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    //   }\n    //   var dd = new Date().toTimeString();\n    //   var random = dd.replace(/[\\W_]+/g, "").substr(0,6);\n    //   result += random;\n    //   return result;\n    // }\n    let d = new Date().getTime();\n    let d2 = window.performance && window.performance.now && window.performance.now() * 1000 || 0;\n    let pattern = "uxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx";\n\n    if (length <= pattern.length) {\n      pattern = pattern.substr(0, length);\n    } else {\n      let add_len = length - pattern.length;\n      let sub_pattern = "-xxxyyxxx";\n      let group_n = Math.floor(add_len / sub_pattern.length);\n\n      for (let i = 0; i < group_n; i++) {\n        pattern += sub_pattern;\n      }\n\n      group_n = add_len - group_n * sub_pattern.length;\n      pattern += sub_pattern.substr(0, group_n);\n    }\n\n    let uuid = pattern.replace(/[xy]/g, function (c) {\n      var r = Math.random() * 16;\n\n      if (d > 0) {\n        var r = (d + r) % 16 | 0;\n        d = Math.floor(d / 16);\n      } else {\n        var r = (d2 + r) % 16 | 0;\n        d2 = Math.floor(d2 / 16);\n      }\n\n      return (c == "x" ? r : r & 0x7 | 0x8).toString(16);\n    });\n    return uuid;\n  },\n  isRealTime: function (element, parent_realTime) {\n    let realtime = element.getAttribute("data-realtime") || parent_realTime;\n\n    if (realtime === "false") {\n      return false;\n    }\n\n    return true;\n  },\n  getParentFromElement: function (element, parent_class, attributes) {\n    if (parent_class) {\n      if (element.classList.contains(parent_class)) {\n        return element;\n      }\n\n      let node = element.parentNode;\n\n      while (node != null && node.classList) {\n        if (node.classList.contains(parent_class)) {\n          return node;\n        }\n\n        node = node.parentNode;\n      }\n    } else if (attributes) {\n      if (attributes.every(attr => element.attributes.hasOwnProperty(attr))) {\n        return element;\n      }\n\n      let node = element.parentNode;\n\n      while (node != null && node.attributes) {\n        if (attributes.every(attr => node.attributes.hasOwnProperty(attr))) {\n          return node;\n        }\n\n        node = node.parentNode;\n      }\n    }\n\n    return false;\n  },\n  isReadValue: function (element) {\n    return element.getAttribute("data-read_value") != "false";\n  },\n  isUpdateValue: function (element) {\n    return element.getAttribute("data-update_value") != "false";\n  },\n  isJsonString: function (str_data) {\n    try {\n      let json_data = JSON.parse(str_data);\n\n      if (typeof json_data === "object" && json_data != null) {\n        return true;\n      } else {\n        return false;\n      }\n    } catch (e) {\n      return false;\n    }\n  },\n  getAttributes: function (element) {\n    return element.getAttributeNames().reduce((attrMap, name) => {\n      attrMap[name] = element.getAttribute(name);\n      return attrMap;\n    }, {});\n  },\n  checkValue: function (value) {\n    if (!value) return false;\n\n    if (/{{\\s*([\\w\\W]+)\\s*}}/g.test(value)) {\n      return false;\n    }\n\n    return true;\n  },\n  // hosseins utills\n  // function to go through all frames\n  allFrame: function allFrame(callback) {\n    let allFrames = [{\n      document,\n      window\n    }];\n\n    for (let frame of document.querySelectorAll("iframe")) {\n      let frameDocument = frame.contentDocument || frame.contentWindow.document;\n      let frameWindow = frame.contentWindow;\n      allFrames.push({\n        document: frameDocument,\n        window: frameWindow,\n        frameElement: frame\n      });\n    }\n\n    let result = new Set();\n\n    for (let frame of allFrames) {\n      let callbackResult = callback(frame);\n      if (callbackResult && typeof callbackResult[Symbol.iterator] === "function") callbackResult.forEach(el => result.add(el));else if (callbackResult) result.add(callbackResult);\n    }\n\n    return Array.from(result);\n  },\n  cssPath: function cssPath(node) {\n    let pathSplits = [];\n\n    do {\n      if (!node || !node.tagName) return false;\n      let pathSplit = node.tagName.toLowerCase();\n      if (node.id && node.tagName !== "BODY") pathSplit += "#" + node.id;\n\n      if (node.classList.length && node.tagName !== "BODY") {\n        node.classList.forEach(item => {\n          if (item.indexOf(":") === -1) pathSplit += "." + item;\n        });\n      }\n\n      if (node.tagName !== "BODY" && node.parentNode) {\n        let index = Array.prototype.indexOf.call(node.parentNode.children, node);\n        pathSplit += `:nth-child(${index + 1})`;\n      }\n\n      pathSplits.unshift(pathSplit);\n      node = node.parentNode;\n    } while (node.tagName !== "HTML");\n\n    return pathSplits.join(" > ");\n  },\n  getTopMostWindow: function getTopMostWindow() {\n    let parentWindow = window;\n\n    while (parentWindow !== window.parent) parentWindow = window.parent;\n\n    return parentWindow;\n  },\n  findIframeFromElement: (windowObject, element) => {\n    let frameElement;\n    CoCreate.utils.allFrame(frame => {\n      if (frame.document.contains(element)) frameElement = frame.frameElement; // window.cc.findIframeFromElement(frame.window, element);\n    });\n    return frameElement;\n  },\n  getIframeFromPath: function getIframeFromPath(path) {\n    let topWindow = CoCreate.utils.getTopMostWindow;\n    path.forEach(selector => {\n      if (topWindow) topWindow = topWindow.querySelector(selector);\n    });\n    return topWindow;\n  },\n  // DO NOT REMOVE\n  // configMatch: function* configMatch(elementConfig, element) {\n  //   for (let config of elementConfig) {\n  //     // if (!Array.isArray(config.selector))\n  //     //   config.selector = [config.selector];\n  //     if (config.selector && element.matches(config.selector)) yield config;\n  //   }\n  //   return;\n  // },\n  configMatch2: function configMatch(elementConfig, element) {\n    let result = [];\n\n    for (let config of elementConfig) {\n      if (config.selector && element.matches(config.selector)) result.push(config);\n    }\n\n    return result;\n  },\n  // DO NOT REMOVE\n  // an opiniated function uses configMatch2 to read configs\n  // WARNING: the config iterated from top to bottom. for deseired effect elementConfig should be reveresed\n  // typeof elementConfig: array of objects and every objects containing keys as false, true or a selector \n  // element: the element to read attributes\n  // key: the key in which is in elementConfig and on match onSuccess callback will be called\n  configExecuter: function configExecuter(element, key, onSuccess, elementConfig) {\n    for (let config of CoCreate.utils.configMatch2(elementConfig || window.elementConfig, element)) if (config[key] === true) return onSuccess(element, config);else if (config[key] === false) return false;else if (config[key] === undefined) continue;else if (CoCreate.utils.isValidSelector(config[key])) return onSuccess(element, config, true);else console.warn("builder: wrong element config ", config);\n\n    return false;\n  },\n  UUID: function UUID(length = 10) {\n    var result = "";\n    var characters = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz";\n    var charactersLength = characters.length;\n\n    for (var i = 0; i < length; i++) {\n      result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n\n    var d = new Date().toTimeString();\n    var random = d.replace(/[\\W_]+/g, "").substr(0, 6);\n    result += random;\n    return result;\n  },\n  parseTextToHtml: function parse(text) {\n    let doc = new DOMParser().parseFromString(text, "text/html");\n    if (doc.head.children[0]) return doc.head.children[0];else return doc.body.children[0];\n  },\n  splitBydelimiter: function parse(str, delimiter) {\n    return str.split(delimiter).map(s => s.trim());\n  },\n  joinBydelimiter: function parse(str, delimiter) {\n    return str.map(s => s.trim()).join(delimiter);\n  },\n  isValidSelector: selector => {\n    try {\n      document.createDocumentFragment().querySelector(selector);\n    } catch (error) {\n      return false;\n    }\n\n    return true;\n  },\n  getElementPath: function getElementPath(element, returnContext) {\n    let path = [];\n    let topWindow = window;\n    let iframeElement = CoCreate.utils.findIframeFromElement(topWindow, element);\n    let p = CoCreate.utils.cssPath(iframeElement);\n    if (p) path.unshift(p);\n    return returnContext ? {\n      path,\n      document: iframeElement || document\n    } : path; //todo: support for nested iframe\n    // while(iframeElement !== findIframeFromElement(topWindow,iframeElement))\n    // {\n    //   iframeElement = findIframeFromElement(topWindow,iframeElement);\n    //   path.unshift(cssPath(iframeElement))\n    // }\n  },\n  isUsageY: function isUsageY(input) {\n    if (this.isJsonString(input.getAttribute(\'data-collection\'))) {\n      return false;\n    }\n\n    if (this.isJsonString(input.getAttribute(\'name\'))) {\n      return false;\n    }\n\n    if (input.tagName === "INPUT" && ["text", "email", "tel", "url"].includes(input.type) || input.tagName === "TEXTAREA") {\n      if (!input.getAttribute(\'name\')) {\n        return false;\n      }\n\n      if (input.getAttribute("data-realtime") == "false") {\n        return false;\n      }\n\n      if (input.getAttribute("data-unique") === "true") {\n        return false;\n      }\n\n      if (input.type === \'password\') {\n        return false;\n      }\n\n      if (!this.isReadValue(input)) {\n        return false;\n      }\n\n      return true;\n    }\n\n    return false;\n  }\n};\nvar _default = CoCreateUtils;\nexports.default = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Db0NyZWF0ZS5mbG9hdGluZ0xhYmVsLy4uL0NvQ3JlYXRlSlMvc3JjL3V0aWxzLmpzPzMyNDUiXSwibmFtZXMiOlsiQ29DcmVhdGVVdGlscyIsImdlbmVyYXRlVVVJRCIsImxlbmd0aCIsImQiLCJEYXRlIiwiZ2V0VGltZSIsImQyIiwid2luZG93IiwicGVyZm9ybWFuY2UiLCJub3ciLCJwYXR0ZXJuIiwic3Vic3RyIiwiYWRkX2xlbiIsInN1Yl9wYXR0ZXJuIiwiZ3JvdXBfbiIsIk1hdGgiLCJmbG9vciIsImkiLCJ1dWlkIiwicmVwbGFjZSIsImMiLCJyIiwicmFuZG9tIiwidG9TdHJpbmciLCJpc1JlYWxUaW1lIiwiZWxlbWVudCIsInBhcmVudF9yZWFsVGltZSIsInJlYWx0aW1lIiwiZ2V0QXR0cmlidXRlIiwiZ2V0UGFyZW50RnJvbUVsZW1lbnQiLCJwYXJlbnRfY2xhc3MiLCJhdHRyaWJ1dGVzIiwiY2xhc3NMaXN0IiwiY29udGFpbnMiLCJub2RlIiwicGFyZW50Tm9kZSIsImV2ZXJ5IiwiYXR0ciIsImhhc093blByb3BlcnR5IiwiaXNSZWFkVmFsdWUiLCJpc1VwZGF0ZVZhbHVlIiwiaXNKc29uU3RyaW5nIiwic3RyX2RhdGEiLCJqc29uX2RhdGEiLCJKU09OIiwicGFyc2UiLCJlIiwiZ2V0QXR0cmlidXRlcyIsImdldEF0dHJpYnV0ZU5hbWVzIiwicmVkdWNlIiwiYXR0ck1hcCIsIm5hbWUiLCJjaGVja1ZhbHVlIiwidmFsdWUiLCJ0ZXN0IiwiYWxsRnJhbWUiLCJjYWxsYmFjayIsImFsbEZyYW1lcyIsImRvY3VtZW50IiwiZnJhbWUiLCJxdWVyeVNlbGVjdG9yQWxsIiwiZnJhbWVEb2N1bWVudCIsImNvbnRlbnREb2N1bWVudCIsImNvbnRlbnRXaW5kb3ciLCJmcmFtZVdpbmRvdyIsInB1c2giLCJmcmFtZUVsZW1lbnQiLCJyZXN1bHQiLCJTZXQiLCJjYWxsYmFja1Jlc3VsdCIsIlN5bWJvbCIsIml0ZXJhdG9yIiwiZm9yRWFjaCIsImVsIiwiYWRkIiwiQXJyYXkiLCJmcm9tIiwiY3NzUGF0aCIsInBhdGhTcGxpdHMiLCJ0YWdOYW1lIiwicGF0aFNwbGl0IiwidG9Mb3dlckNhc2UiLCJpZCIsIml0ZW0iLCJpbmRleE9mIiwiaW5kZXgiLCJwcm90b3R5cGUiLCJjYWxsIiwiY2hpbGRyZW4iLCJ1bnNoaWZ0Iiwiam9pbiIsImdldFRvcE1vc3RXaW5kb3ciLCJwYXJlbnRXaW5kb3ciLCJwYXJlbnQiLCJmaW5kSWZyYW1lRnJvbUVsZW1lbnQiLCJ3aW5kb3dPYmplY3QiLCJDb0NyZWF0ZSIsInV0aWxzIiwiZ2V0SWZyYW1lRnJvbVBhdGgiLCJwYXRoIiwidG9wV2luZG93Iiwic2VsZWN0b3IiLCJxdWVyeVNlbGVjdG9yIiwiY29uZmlnTWF0Y2gyIiwiY29uZmlnTWF0Y2giLCJlbGVtZW50Q29uZmlnIiwiY29uZmlnIiwibWF0Y2hlcyIsImNvbmZpZ0V4ZWN1dGVyIiwia2V5Iiwib25TdWNjZXNzIiwidW5kZWZpbmVkIiwiaXNWYWxpZFNlbGVjdG9yIiwiY29uc29sZSIsIndhcm4iLCJVVUlEIiwiY2hhcmFjdGVycyIsImNoYXJhY3RlcnNMZW5ndGgiLCJjaGFyQXQiLCJ0b1RpbWVTdHJpbmciLCJwYXJzZVRleHRUb0h0bWwiLCJ0ZXh0IiwiZG9jIiwiRE9NUGFyc2VyIiwicGFyc2VGcm9tU3RyaW5nIiwiaGVhZCIsImJvZHkiLCJzcGxpdEJ5ZGVsaW1pdGVyIiwic3RyIiwiZGVsaW1pdGVyIiwic3BsaXQiLCJtYXAiLCJzIiwidHJpbSIsImpvaW5CeWRlbGltaXRlciIsImNyZWF0ZURvY3VtZW50RnJhZ21lbnQiLCJlcnJvciIsImdldEVsZW1lbnRQYXRoIiwicmV0dXJuQ29udGV4dCIsImlmcmFtZUVsZW1lbnQiLCJwIiwiaXNVc2FnZVkiLCJpbnB1dCIsImluY2x1ZGVzIiwidHlwZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBRUEsTUFBTUEsYUFBYSxHQUFHO0FBQ3BCQyxjQUFZLEVBQUUsVUFB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Q0UsSUFBL0MsQ0FBOUIsSUFBdUZGLEtBQUssQ0FBQy9ELE9BQU4sS0FBa0IsVUFBN0csRUFBeUg7QUFFeEgsVUFBSSxDQUFDK0QsS0FBSyxDQUFDbEgsWUFBTixDQUFtQixNQUFuQixDQUFMLEVBQWlDO0FBQ2hDLGVBQU8sS0FBUDtBQUNBOztBQUNELFVBQUlrSCxLQUFLLENBQUNsSCxZQUFOLENBQW1CLGVBQW5CLEtBQXVDLE9BQTNDLEVBQW9EO0FBQ25ELGVBQU8sS0FBUDtBQUNBOztBQUVELFVBQUlrSCxLQUFLLENBQUNsSCxZQUFOLENBQW1CLGFBQW5CLE1BQXNDLE1BQTFDLEVBQWtEO0FBQ2pELGVBQU8sS0FBUDtBQUNBOztBQUVELFVBQUlrSCxLQUFLLENBQUNFLElBQU4sS0FBZSxVQUFuQixFQUErQjtBQUM5QixlQUFPLEtBQVA7QUFDQTs7QUFFRCxVQUFJLENBQUMsS0FBS3pHLFdBQUwsQ0FBaUJ1RyxLQUFqQixDQUFMLEVBQThCO0FBQzdCLGVBQU8sS0FBUDtBQUNBOztBQUNELGFBQU8sSUFBUDtBQUNBOztBQUNELFdBQU8sS0FBUDtBQUNBO0FBN1VvQixDQUF0QjtlQWdWZTlJLGEiLCJmaWxlIjoiLi4vLi4vQ29DcmVhdGVKUy9zcmMvdXRpbHMuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENyZWF0ZWQgYnkgamluXG4gKiAyMDIwLTA0LTAzXG4gKi9cblxuY29uc3QgQ29DcmVhdGVVdGlscyA9IHtcbiAgZ2VuZXJhdGVVVUlEOiBmdW5jdGlvbiAobGVuZ3RoID0gMzYpIHtcbiAgICAvLyBpZiAobGVuZ3RoID09IDEwKSB7XG4gICAgLy8gICB2YXIgcmVzdWx0ICAgICAgICAgICA9ICcnO1xuICAgIC8vICAgdmFyIGNoYXJhY3RlcnMgICAgICAgPSAnQUJDREVGR0hJSktMTU5PUFFSU1RVVldYWVphYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5ejAxMjM0NTY3ODknO1xuICAgIC8vICAgdmFyIGNoYXJhY3RlcnNMZW5ndGggPSBjaGFyYWN0ZXJzLmxlbmd0aDtcbiAgICAvLyAgIGZvciAoIHZhciBpID0gMDsgaSA8IGxlbmd0aDsgaSsrICkge1xuICAgIC8vICAgICByZXN1bHQgKz0gY2hhcmFjdGVycy5jaGFyQXQoTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogY2hhcmFjdGVyc0xlbmd0aCkpO1xuICAgIC8vICAgfVxuXG4gICAgLy8gICB2YXIgZGQgPSBuZXcgRGF0ZSgpLnRvVGltZVN0cmluZygpO1xuICAgIC8vICAgdmFyIHJhbmRvbSA9IGRkLnJlcGxhY2UoL1tcXFdfXSsvZywgXCJcIikuc3Vic3RyKDAsNik7XG4gICAgLy8gICByZXN1bHQgKz0gcmFuZG9tO1xuICAgIC8vICAgcmV0dXJuIHJlc3VsdDtcbiAgICAvLyB9XG5cbiAgICBsZXQgZCA9IG5ldyBEYXRlKCkuZ2V0VGltZSgpO1xuICAgIGxldCBkMiA9XG4gICAgICAod2luZG93LnBlcmZvcm1hbmNlICYmXG4gICAgICAgIHdpbmRvdy5wZXJmb3JtYW5jZS5ub3cgJiZcbiAgICAgICAgd2luZG93LnBlcmZvcm1hbmNlLm5vdygpICogMTAwMCkgfHxcbiAgICAgIDA7XG4gICAgbGV0IHBhdHRlcm4gPSBcInV4eHh4eHh4LXh4eHgtNHh4eC15eHh4LXh4eHh4eHh4eHh4eFwiO1xuXG4gICAgaWYgKGxlbmd0aCA8PSBwYXR0ZXJuLmxlbmd0aCkge1xuICAgICAgcGF0dGVybiA9IHBhdHRlcm4uc3Vic3RyKDAsIGxlbmd0aCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGxldCBhZGRfbGVuID0gbGVuZ3RoIC0gcGF0dGVybi5sZW5ndGg7XG4gICAgICBsZXQgc3ViX3BhdHRlcm4gPSBcIi14eHh5eXh4eFwiO1xuXG4gICAgICBsZXQgZ3JvdXBfbiA9IE1hdGguZmxvb3IoYWRkX2xlbiAvIHN1Yl9wYXR0ZXJuLmxlbmd0aCk7XG5cbiAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgZ3JvdXBfbjsgaSsrKSB7XG4gICAgICAgIHBhdHRlcm4gKz0gc3ViX3BhdHRlcm47XG4gICAgICB9XG5cbiAgICAgIGdyb3VwX24gPSBhZGRfbGVuIC0gZ3JvdXBfbiAqIHN1Yl9wYXR0ZXJuLmxlbmd0aDtcbiAgICAgIHBhdHRlcm4gKz0gc3ViX3BhdHRlcm4uc3Vic3RyKDAsIGdyb3VwX24pO1xuICAgIH1cblxuICAgIGxldCB1dWlkID0gcGF0dGVybi5yZXBsYWNlKC9beHldL2csIGZ1bmN0aW9uIChjKSB7XG4gICAgICB2YXIgciA9IE1hdGgucmFuZG9tKCkgKiAxNjtcbiAgICAgIGlmIChkID4gMCkge1xuICAgICAgICB2YXIgciA9IChkICsgcikgJSAxNiB8IDA7XG4gICAgICAgIGQgPSBNYXRoLmZsb29yKGQgLyAxNik7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB2YXIgciA9IChkMiArIHIpICUgMTYgfCAwO1xuICAgICAgICBkMiA9IE1hdGguZmxvb3IoZDIgLyAxNik7XG4gICAgICB9XG4gICAgICByZXR1cm4gKGMgPT0gXCJ4XCIgPyByIDogKHIgJiAweDcpIHwgMHg4KS50b1N0cmluZygxNik7XG4gICAgfSk7XG4gICAgcmV0dXJuIHV1aWQ7XG4gIH0sXG5cbiAgaXNSZWFsVGltZTogZnVuY3Rpb24gKGVsZW1lbnQsIHBhcmVudF9yZWFsVGltZSkge1xuICAgIGxldCByZWFsdGltZSA9IGVsZW1lbnQuZ2V0QXR0cmlidXRlKFwiZGF0YS1yZWFsdGltZVwiKSB8fCBwYXJlbnRfcmVhbFRpbWU7XG4gICAgaWYgKHJlYWx0aW1lID09PSBcImZhbHNlXCIpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG5cbiAgICByZXR1cm4gdHJ1ZTtcbiAgfSxcblxuICBnZXRQYXJlbnRGcm9tRWxlbWVudDogZnVuY3Rpb24gKGVsZW1lbnQsIHBhcmVudF9jbGFzcywgYXR0cmlidXRlcykge1xuICAgIGlmIChwYXJlbnRfY2xhc3MpIHtcbiAgICAgIGlmIChlbGVtZW50LmNsYXNzTGlzdC5jb250YWlucyhwYXJlbnRfY2xhc3MpKSB7XG4gICAgICAgIHJldHVybiBlbGVtZW50O1xuICAgICAgfVxuXG4gICAgICBsZXQgbm9kZSA9IGVsZW1lbnQucGFyZW50Tm9kZTtcbiAgICAgIHdoaWxlIChub2RlICE9IG51bGwgJiYgbm9kZS5jbGFzc0xpc3QpIHtcbiAgICAgICAgaWYgKG5vZGUuY2xhc3NMaXN0LmNvbnRhaW5zKHBhcmVudF9jbGFzcykpIHtcbiAgICAgICAgICByZXR1cm4gbm9kZTtcbiAgICAgICAgfVxuICAgICAgICBub2RlID0gbm9kZS5wYXJlbnROb2RlO1xuICAgICAgfVxuICAgIH0gZWxzZSBpZiAoYXR0cmlidXRlcykge1xuICAgICAgaWYgKGF0dHJpYnV0ZXMuZXZlcnkoKGF0dHIpID0+IGVsZW1lbnQuYXR0cmlidXRlcy5oYXNPd25Qcm9wZXJ0eShhdHRyKSkpIHtcbiAgICAgICAgcmV0dXJuIGVsZW1lbnQ7XG4gICAgICB9XG5cbiAgICAgIGxldCBub2RlID0gZWxlbWVudC5wYXJlbnROb2RlO1xuICAgICAgd2hpbGUgKG5vZGUgIT0gbnVsbCAmJiBub2RlLmF0dHJpYnV0ZXMpIHtcbiAgICAgICAgaWYgKGF0dHJpYnV0ZXMuZXZlcnkoKGF0dHIpID0+IG5vZGUuYXR0cmlidXRlcy5oYXNPd25Qcm9wZXJ0eShhdHRyKSkpIHtcbiAgICAgICAgICByZXR1cm4gbm9kZTtcbiAgICAgICAgfVxuICAgICAgICBub2RlID0gbm9kZS5wYXJlbnROb2RlO1xuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBmYWxzZTtcbiAgfSxcblxuICBpc1JlYWRWYWx1ZTogZnVuY3Rpb24gKGVsZW1lbnQpIHtcbiAgICByZXR1cm4gZWxlbWVudC5nZXRBdHRyaWJ1dGUoXCJkYXRhLXJlYWRfdmFsdWVcIikgIT0gXCJmYWxzZVwiO1xuICB9LFxuICBcbiAgaXNVcGRhdGVWYWx1ZTogZnVuY3Rpb24oZWxlbWVudCkge1xuICBcdHJldHVybiBlbGVtZW50LmdldEF0dHJpYnV0ZShcImRhdGEtdXBkYXRlX3ZhbHVlXCIpICE9IFwiZmFsc2VcIjtcbiAgfSxcblxuICBpc0pzb25TdHJpbmc6IGZ1bmN0aW9uIChzdHJfZGF0YSkge1xuICAgIHRyeSB7XG4gICAgICBsZXQganNvbl9kYXRhID0gSlNPTi5wYXJzZShzdHJfZGF0YSk7XG4gICAgICBpZiAodHlwZW9mIGpzb25fZGF0YSA9PT0gXCJvYmplY3RcIiAmJiBqc29uX2RhdGEgIT0gbnVsbCkge1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgIH1cbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICB9LFxuXG4gIGdldEF0dHJpYnV0ZXM6IGZ1bmN0aW9uIChlbGVtZW50KSB7XG4gICAgcmV0dXJuIGVsZW1lbnQuZ2V0QXR0cmlidXRlTmFtZXMoKS5yZWR1Y2UoKGF0dHJNYXAsIG5hbWUpID0+IHtcbiAgICAgIGF0dHJNYXBbbmFtZV0gPSBlbGVtZW50LmdldEF0dHJpYnV0ZShuYW1lKTtcbiAgICAgIHJldHVybiBhdHRyTWFwO1xuICAgIH0sIHt9KTtcbiAgfSxcblxuICBjaGVja1ZhbHVlOiBmdW5jdGlvbiAodmFsdWUpIHtcbiAgICBpZiAoIXZhbHVlKSByZXR1cm4gZmFsc2U7XG4gICAgaWYgKC97e1xccyooW1xcd1xcV10rKVxccyp9fS9nLnRlc3QodmFsdWUpKSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuXG4gICAgcmV0dXJuIHRydWU7XG4gIH0sXG4gIC8vIGhvc3NlaW5zIHV0aWxsc1xuXG4gIC8vIGZ1bmN0aW9uIHRvIGdvIHRocm91Z2ggYWxsIGZyYW1lc1xuICBhbGxGcmFtZTogZnVuY3Rpb24gYWxsRnJhbWUoY2FsbGJhY2spIHtcbiAgICBsZXQgYWxsRnJhbWVzID0gW3sgZG9jdW1lbnQsIHdpbmRvdyB9XTtcbiAgICBmb3IgKGxldCBmcmFtZSBvZiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFwiaWZyYW1lXCIpKSB7XG4gICAgICBsZXQgZnJhbWVEb2N1bWVudCA9IGZyYW1lLmNvbnRlbnREb2N1bWVudCB8fCBmcmFtZS5jb250ZW50V2luZG93LmRvY3VtZW50O1xuICAgICAgbGV0IGZyYW1lV2luZG93ID0gZnJhbWUuY29udGVudFdpbmRvdztcbiAgICAgIGFsbEZyYW1lcy5wdXNoKHtcbiAgICAgICAgZG9jdW1lbnQ6IGZyYW1lRG9jdW1lbnQsXG4gICAgICAgIHdpbmRvdzogZnJhbWVXaW5kb3csXG4gICAgICAgIGZyYW1lRWxlbWVudDogZnJhbWUsXG4gICAgICB9KTtcbiAgICB9XG4gICAgbGV0IHJlc3VsdCA9IG5ldyBTZXQoKTtcbiAgICBmb3IgKGxldCBmcmFtZSBvZiBhbGxGcmFtZXMpIHtcbiAgICAgIGxldCBjYWxsYmFja1Jlc3VsdCA9IGNhbGxiYWNrKGZyYW1lKTtcbiAgICAgIGlmIChcbiAgICAgICAgY2FsbGJhY2tSZXN1bHQgJiZcbiAgICAgICAgdHlwZW9mIGNhbGxiYWNrUmVzdWx0W1N5bWJvbC5pdGVyYXRvcl0gPT09IFwiZnVuY3Rpb25cIlxuICAgICAgKVxuICAgICAgICBjYWxsYmFja1Jlc3VsdC5mb3JFYWNoKChlbCkgPT4gcmVzdWx0LmFkZChlbCkpO1xuICAgICAgZWxzZSBpZiAoY2FsbGJhY2tSZXN1bHQpIHJlc3VsdC5hZGQoY2FsbGJhY2tSZXN1bHQpO1xuICAgIH1cblxuICAgIHJldHVybiBBcnJheS5mcm9tKHJlc3VsdCk7XG4gIH0sXG5cbiAgY3NzUGF0aDogZnVuY3Rpb24gY3NzUGF0aChub2RlKSB7XG4gICAgbGV0IHBhdGhTcGxpdHMgPSBbXTtcbiAgICBkbyB7XG4gICAgICBpZiAoIW5vZGUgfHwgIW5vZGUudGFnTmFtZSkgcmV0dXJuIGZhbHNlO1xuICAgICAgbGV0IHBhdGhTcGxpdCA9IG5vZGUudGFnTmFtZS50b0xvd2VyQ2FzZSgpO1xuICAgICAgaWYgKG5vZGUuaWQgJiYgbm9kZS50YWdOYW1lICE9PSBcIkJPRFlcIikgcGF0aFNwbGl0ICs9IFwiI1wiICsgbm9kZS5pZDtcblxuICAgICAgaWYgKG5vZGUuY2xhc3NMaXN0Lmxlbmd0aCAmJiBub2RlLnRhZ05hbWUgIT09IFwiQk9EWVwiKSB7XG4gICAgICAgIG5vZGUuY2xhc3NMaXN0LmZvckVhY2goKGl0ZW0pID0+IHtcbiAgICAgICAgICBpZiAoaXRlbS5pbmRleE9mKFwiOlwiKSA9PT0gLTEpIHBhdGhTcGxpdCArPSBcIi5cIiArIGl0ZW07XG4gICAgICAgIH0pO1xuICAgICAgfVxuXG4gICAgICBpZiAobm9kZS50YWdOYW1lICE9PSBcIkJPRFlcIiAmJiBub2RlLnBhcmVudE5vZGUpIHtcbiAgICAgICAgbGV0IGluZGV4ID0gQXJyYXkucHJvdG90eXBlLmluZGV4T2YuY2FsbChcbiAgICAgICAgICBub2RlLnBhcmVudE5vZGUuY2hpbGRyZW4sXG4gICAgICAgICAgbm9kZVxuICAgICAgICApO1xuICAgICAgICBwYXRoU3BsaXQgKz0gYDpudGgtY2hpbGQoJHtpbmRleCArIDF9KWA7XG4gICAgICB9XG5cbiAgICAgIHBhdGhTcGxpdHMudW5zaGlmdChwYXRoU3BsaXQpO1xuICAgICAgbm9kZSA9IG5vZGUucGFyZW50Tm9kZTtcbiAgICB9IHdoaWxlIChub2RlLnRhZ05hbWUgIT09IFwiSFRNTFwiKTtcblxuICAgIHJldHVybiBwYXRoU3BsaXRzLmpvaW4oXCIgPiBcIik7XG4gIH0sXG5cbiAgZ2V0VG9wTW9zdFdpbmRvdzogZnVuY3Rpb24gZ2V0VG9wTW9zdFdpbmRvdygpIHtcbiAgICBsZXQgcGFyZW50V2luZG93ID0gd2luZG93O1xuICAgIHdoaWxlIChwYXJlbnRXaW5kb3cgIT09IHdpbmRvdy5wYXJlbnQpIHBhcmVudFdpbmRvdyA9IHdpbmRvdy5wYXJlbnQ7XG4gICAgcmV0dXJuIHBhcmVudFdpbmRvdztcbiAgfSxcblxuICBmaW5kSWZyYW1lRnJvbUVsZW1lbnQ6ICh3aW5kb3dPYmplY3QsIGVsZW1lbnQpID0+IHtcbiAgICBsZXQgZnJhbWVFbGVtZW50O1xuICAgIENvQ3JlYXRlLnV0aWxzLmFsbEZyYW1lKChmcmFtZSkgPT4ge1xuICAgICAgaWYgKGZyYW1lLmRvY3VtZW50LmNvbnRhaW5zKGVsZW1lbnQpKSBmcmFtZUVsZW1lbnQgPSBmcmFtZS5mcmFtZUVsZW1lbnQ7XG4gICAgICAvLyB3aW5kb3cuY2MuZmluZElmcmFtZUZyb21FbGVtZW50KGZyYW1lLndpbmRvdywgZWxlbWVudCk7XG4gICAgfSk7XG4gICAgcmV0dXJuIGZyYW1lRWxlbWVudDtcbiAgfSxcblxuICBnZXRJZnJhbWVGcm9tUGF0aDogZnVuY3Rpb24gZ2V0SWZyYW1lRnJvbVBhdGgocGF0aCkge1xuICAgIGxldCB0b3BXaW5kb3cgPSBDb0NyZWF0ZS51dGlscy5nZXRUb3BNb3N0V2luZG93O1xuXG4gICAgcGF0aC5mb3JFYWNoKChzZWxlY3RvcikgPT4ge1xuICAgICAgaWYgKHRvcFdpbmRvdykgdG9wV2luZG93ID0gdG9wV2luZG93LnF1ZXJ5U2VsZWN0b3Ioc2VsZWN0b3IpO1xuICAgIH0pO1xuICAgIHJldHVybiB0b3BXaW5kb3c7XG4gIH0sXG4gIC8vIERPIE5PVCBSRU1PVkVcbiAgXG4gIC8vIGNvbmZpZ01hdGNoOiBmdW5jdGlvbiogY29uZmlnTWF0Y2goZWxlbWVudENvbmZpZywgZWxlbWVudCkge1xuICAvLyAgIGZvciAobGV0IGNvbmZpZyBvZiBlbGVtZW50Q29uZmlnKSB7XG4gIC8vICAgICAvLyBpZiAoIUFycmF5LmlzQXJyYXkoY29uZmlnLnNlbGVjdG9yKSlcbiAgLy8gICAgIC8vICAgY29uZmlnLnNlbGVjdG9yID0gW2NvbmZpZy5zZWxlY3Rvcl07XG5cbiAgLy8gICAgIGlmIChjb25maWcuc2VsZWN0b3IgJiYgZWxlbWVudC5tYXRjaGVzKGNvbmZpZy5zZWxlY3RvcikpIHlpZWxkIGNvbmZpZztcbiAgLy8gICB9XG4gIC8vICAgcmV0dXJuO1xuICAvLyB9LFxuICBjb25maWdNYXRjaDI6IGZ1bmN0aW9uIGNvbmZpZ01hdGNoKGVsZW1lbnRDb25maWcsIGVsZW1lbnQpIHtcbiAgICBsZXQgcmVzdWx0ID0gW107XG4gICAgZm9yIChsZXQgY29uZmlnIG9mIGVsZW1lbnRDb25maWcpIHtcbiAgICAgIGlmIChjb25maWcuc2VsZWN0b3IgJiYgZWxlbWVudC5tYXRjaGVzKGNvbmZpZy5zZWxlY3RvcikpIHJlc3VsdC5wdXNoKGNvbmZpZyk7XG4gICAgfVxuICAgIHJldHVybiByZXN1bHQ7XG4gIH0sXG4gIFxuICAvLyBETyBOT1QgUkVNT1ZFXG4gIFxuICAvLyBhbiBvcGluaWF0ZWQgZnVuY3Rpb24gdXNlcyBjb25maWdNYXRjaDIgdG8gcmVhZCBjb25maWdzXG4gIC8vIFdBUk5JTkc6IHRoZSBjb25maWcgaXRlcmF0ZWQgZnJvbSB0b3AgdG8gYm90dG9tLiBmb3IgZGVzZWlyZWQgZWZmZWN0IGVsZW1lbnRDb25maWcgc2hvdWxkIGJlIHJldmVyZXNlZFxuICAvLyB0eXBlb2YgZWxlbWVudENvbmZpZzogYXJyYXkgb2Ygb2JqZWN0cyBhbmQgZXZlcnkgb2JqZWN0cyBjb250YWluaW5nIGtleXMgYXMgZmFsc2UsIHRydWUgb3IgYSBzZWxlY3RvciBcbiAgLy8gZWxlbWVudDogdGhlIGVsZW1lbnQgdG8gcmVhZCBhdHRyaWJ1dGVzXG4gIC8vIGtleTogdGhlIGtleSBpbiB3aGljaCBpcyBpbiBlbGVtZW50Q29uZmlnIGFuZCBvbiBtYXRjaCBvblN1Y2Nlc3MgY2FsbGJhY2sgd2lsbCBiZSBjYWxsZWRcbiAgY29uZmlnRXhlY3V0ZXI6IGZ1bmN0aW9uIGNvbmZpZ0V4ZWN1dGVyKGVsZW1lbnQsIGtleSAsIG9uU3VjY2VzcywgZWxlbWVudENvbmZpZyApIHtcbiAgICBmb3IgKGxldCBjb25maWcgb2YgQ29DcmVhdGUudXRpbHMuY29uZmlnTWF0Y2gyKGVsZW1lbnRDb25maWcgfHwgd2luZG93LmVsZW1lbnRDb25maWcsIGVsZW1lbnQpKVxuICAgICAgaWYgKGNvbmZpZ1trZXldID09PSB0cnVlKSByZXR1cm4gb25TdWNjZXNzKGVsZW1lbnQsIGNvbmZpZyk7XG4gICAgICBlbHNlIGlmIChjb25maWdba2V5XSA9PT0gZmFsc2UpIHJldHVybiBmYWxzZTtcbiAgICAgIGVsc2UgaWYgKGNvbmZpZ1trZXldID09PSB1bmRlZmluZWQpIGNvbnRpbnVlO1xuICAgICAgZWxzZSBpZiAoQ29DcmVhdGUudXRpbHMuaXNWYWxpZFNlbGVjdG9yKGNvbmZpZ1trZXldKSlcbiAgICAgICAgcmV0dXJuIG9uU3VjY2VzcyhlbGVtZW50LCBjb25maWcsIHRydWUpO1xuICAgICAgZWxzZSBjb25zb2xlLndhcm4oXCJidWlsZGVyOiB3cm9uZyBlbGVtZW50IGNvbmZpZyBcIiwgY29uZmlnKTtcblxuICAgIHJldHVybiBmYWxzZTtcbiAgfSxcblxuICBVVUlEOiBmdW5jdGlvbiBVVUlEKGxlbmd0aCA9IDEwKSB7XG4gICAgdmFyIHJlc3VsdCA9IFwiXCI7XG4gICAgdmFyIGNoYXJhY3RlcnMgPSBcIkFCQ0RFRkdISUpLTE1OT1BRUlNUVVZXWFlaYWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXpcIjtcblxuICAgIHZhciBjaGFyYWN0ZXJzTGVuZ3RoID0gY2hhcmFjdGVycy5sZW5ndGg7XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsZW5ndGg7IGkrKykge1xuICAgICAgcmVzdWx0ICs9IGNoYXJhY3RlcnMuY2hhckF0KE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIGNoYXJhY3RlcnNMZW5ndGgpKTtcbiAgICB9XG5cbiAgICB2YXIgZCA9IG5ldyBEYXRlKCkudG9UaW1lU3RyaW5nKCk7XG4gICAgdmFyIHJhbmRvbSA9IGQucmVwbGFjZSgvW1xcV19dKy9nLCBcIlwiKS5zdWJzdHIoMCwgNik7XG4gICAgcmVzdWx0ICs9IHJhbmRvbTtcbiAgICByZXR1cm4gcmVzdWx0O1xuICB9LFxuXG4gIHBhcnNlVGV4dFRvSHRtbDogZnVuY3Rpb24gcGFyc2UodGV4dCkge1xuICAgIGxldCBkb2MgPSBuZXcgRE9NUGFyc2VyKCkucGFyc2VGcm9tU3RyaW5nKHRleHQsIFwidGV4dC9odG1sXCIpO1xuICAgIGlmIChkb2MuaGVhZC5jaGlsZHJlblswXSkgcmV0dXJuIGRvYy5oZWFkLmNoaWxkcmVuWzBdO1xuICAgIGVsc2UgcmV0dXJuIGRvYy5ib2R5LmNoaWxkcmVuWzBdO1xuICB9LFxuXG4gIHNwbGl0QnlkZWxpbWl0ZXI6IGZ1bmN0aW9uIHBhcnNlKHN0ciwgZGVsaW1pdGVyKSB7XG4gICAgcmV0dXJuIHN0ci5zcGxpdChkZWxpbWl0ZXIpLm1hcCgocykgPT4gcy50cmltKCkpO1xuICB9LFxuXG4gIGpvaW5CeWRlbGltaXRlcjogZnVuY3Rpb24gcGFyc2Uoc3RyLCBkZWxpbWl0ZXIpIHtcbiAgICByZXR1cm4gc3RyLm1hcCgocykgPT4gcy50cmltKCkpLmpvaW4oZGVsaW1pdGVyKTtcbiAgfSxcblxuICBpc1ZhbGlkU2VsZWN0b3I6IChzZWxlY3RvcikgPT4ge1xuICAgIHRyeSB7XG4gICAgICBkb2N1bWVudC5jcmVhdGVEb2N1bWVudEZyYWdtZW50KCkucXVlcnlTZWxlY3RvcihzZWxlY3Rvcik7XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgcmV0dXJuIHRydWU7XG4gIH0sXG5cbiAgZ2V0RWxlbWVudFBhdGg6IGZ1bmN0aW9uIGdldEVsZW1lbnRQYXRoKGVsZW1lbnQsIHJldHVybkNvbnRleHQpIHtcbiAgICBsZXQgcGF0aCA9IFtdO1xuXG4gICAgbGV0IHRvcFdpbmRvdyA9IHdpbmRvdztcbiAgICBsZXQgaWZyYW1lRWxlbWVudCA9IENvQ3JlYXRlLnV0aWxzLmZpbmRJZnJhbWVGcm9tRWxlbWVudCh0b3BXaW5kb3csIGVsZW1lbnQpO1xuICAgIGxldCBwID0gQ29DcmVhdGUudXRpbHMuY3NzUGF0aChpZnJhbWVFbGVtZW50KTtcbiAgICBpZiAocCkgcGF0aC51bnNoaWZ0KHApO1xuXG4gICAgcmV0dXJuIHJldHVybkNvbnRleHQgPyB7IHBhdGgsIGRvY3VtZW50OiBpZnJhbWVFbGVtZW50IHx8IGRvY3VtZW50IH0gOiBwYXRoO1xuICAgIC8vdG9kbzogc3VwcG9ydCBmb3IgbmVzdGVkIGlmcmFtZVxuICAgIC8vIHdoaWxlKGlmcmFtZUVsZW1lbnQgIT09IGZpbmRJZnJhbWVGcm9tRWxlbWVudCh0b3BXaW5kb3csaWZyYW1lRWxlbWVudCkpXG4gICAgLy8ge1xuICAgIC8vICAgaWZyYW1lRWxlbWVudCA9IGZpbmRJZnJhbWVGcm9tRWxlbWVudCh0b3BXaW5kb3csaWZyYW1lRWxlbWVudCk7XG4gICAgLy8gICBwYXRoLnVuc2hpZnQoY3NzUGF0aChpZnJhbWVFbGVtZW50KSlcbiAgICAvLyB9XG4gIH0sXG4gIFxuICBpc1VzYWdlWTogZnVuY3Rpb24gaXNVc2FnZVkoaW5wdXQpIHtcblx0XHRpZiAodGhpcy5pc0pzb25TdHJpbmcoaW5wdXQuZ2V0QXR0cmlidXRlKCdkYXRhLWNvbGxlY3Rpb24nKSkpIHtcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cdFx0XG5cdFx0aWYgKHRoaXMuaXNKc29uU3RyaW5nKGlucHV0LmdldEF0dHJpYnV0ZSgnbmFtZScpKSkge1xuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblx0XHRcblx0XHRpZiAoKGlucHV0LnRhZ05hbWUgPT09IFwiSU5QVVRcIiAmJiBbXCJ0ZXh0XCIsIFwiZW1haWxcIiwgXCJ0ZWxcIiwgXCJ1cmxcIl0uaW5jbHVkZXMoaW5wdXQudHlwZSkpIHx8IGlucHV0LnRhZ05hbWUgPT09IFwiVEVYVEFSRUFcIikge1xuXHRcdFx0XG5cdFx0XHRpZiAoIWlucHV0LmdldEF0dHJpYnV0ZSgnbmFtZScpKSB7XG5cdFx0XHRcdHJldHVybiBmYWxzZTtcblx0XHRcdH1cblx0XHRcdGlmIChpbnB1dC5nZXRBdHRyaWJ1dGUoXCJkYXRhLXJlYWx0aW1lXCIpID09IFwiZmFsc2VcIikge1xuXHRcdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0XHR9XG5cdFx0XHRcblx0XHRcdGlmIChpbnB1dC5nZXRBdHRyaWJ1dGUoXCJkYXRhLXVuaXF1ZVwiKSA9PT0gXCJ0cnVlXCIpIHtcblx0XHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdFx0fVxuXHRcdFx0XG5cdFx0XHRpZiAoaW5wdXQudHlwZSA9PT0gJ3Bhc3N3b3JkJykge1xuXHRcdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0XHR9XG5cdFx0XHRcblx0XHRcdGlmICghdGhpcy5pc1JlYWRWYWx1ZShpbnB1dCkpIHtcblx0XHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdFx0fVxuXHRcdFx0cmV0dXJuIHRydWU7XG5cdFx0fVxuXHRcdHJldHVybiBmYWxzZTtcblx0fSxcbn07XG5cbmV4cG9ydCBkZWZhdWx0IENvQ3JlYXRlVXRpbHM7XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../../CoCreateJS/src/utils.js\n')}}]);